{"version":3,"file":"static/js/562.8ffe027f.chunk.js","mappings":"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","sources":["../node_modules/invariant/browser.js","../node_modules/react-bootstrap/esm/CardBody.js","../node_modules/react-bootstrap/esm/CardFooter.js","../node_modules/react-bootstrap/esm/CardHeaderContext.js","../node_modules/react-bootstrap/esm/CardHeader.js","../node_modules/react-bootstrap/esm/CardImg.js","../node_modules/react-bootstrap/esm/CardImgOverlay.js","../node_modules/react-bootstrap/esm/CardLink.js","../node_modules/react-bootstrap/esm/divWithClassName.js","../node_modules/react-bootstrap/esm/CardSubtitle.js","../node_modules/react-bootstrap/esm/CardText.js","../node_modules/react-bootstrap/esm/CardTitle.js","../node_modules/react-bootstrap/esm/Card.js","../node_modules/@restart/hooks/esm/useCommittedRef.js","../node_modules/@restart/hooks/esm/useEventCallback.js","../node_modules/@restart/hooks/esm/useUpdateEffect.js","../node_modules/@restart/hooks/esm/useWillUnmount.js","../node_modules/@restart/hooks/esm/useUpdatedRef.js","../node_modules/@restart/hooks/esm/useTimeout.js","../node_modules/@restart/hooks/esm/useMounted.js","../node_modules/@restart/hooks/esm/useIsomorphicEffect.js","../node_modules/@restart/hooks/esm/useResizeObserver.js","../node_modules/@restart/ui/esm/Button.js","../node_modules/@restart/ui/esm/Anchor.js","../node_modules/@babel/runtime/helpers/esm/extends.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../node_modules/uncontrollable/lib/esm/utils.js","../node_modules/uncontrollable/lib/esm/hook.js","../node_modules/react-lifecycles-compat/react-lifecycles-compat.es.js","../node_modules/react-bootstrap/esm/CarouselCaption.js","../node_modules/react-bootstrap/esm/CarouselItem.js","../node_modules/react-bootstrap/esm/ElementChildren.js","../node_modules/dom-helpers/esm/ownerWindow.js","../node_modules/dom-helpers/esm/ownerDocument.js","../node_modules/dom-helpers/esm/hyphenate.js","../node_modules/dom-helpers/esm/hyphenateStyle.js","../node_modules/dom-helpers/esm/isTransform.js","../node_modules/dom-helpers/esm/css.js","../node_modules/dom-helpers/esm/getComputedStyle.js","../node_modules/dom-helpers/esm/canUseDOM.js","../node_modules/dom-helpers/esm/addEventListener.js","../node_modules/dom-helpers/esm/removeEventListener.js","../node_modules/dom-helpers/esm/listen.js","../node_modules/dom-helpers/esm/transitionEnd.js","../node_modules/dom-helpers/esm/triggerEvent.js","../node_modules/react-bootstrap/esm/transitionEndListener.js","../node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/react-transition-group/esm/config.js","../node_modules/react-transition-group/esm/TransitionGroupContext.js","../node_modules/react-transition-group/esm/utils/reflow.js","../node_modules/react-transition-group/esm/Transition.js","../node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","../node_modules/@restart/hooks/esm/useMergedRefs.js","../node_modules/react-bootstrap/esm/TransitionWrapper.js","../node_modules/react-bootstrap/esm/safeFindDOMNode.js","../node_modules/react-bootstrap/esm/Carousel.js","../node_modules/react-bootstrap/esm/triggerBrowserReflow.js","../node_modules/react-bootstrap/esm/ThemeProvider.js","../node_modules/classnames/index.js","../node_modules/framer-motion/dist/es/utils/use-is-mounted.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/PopChild.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/PresenceChild.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/index.mjs","../node_modules/framer-motion/dist/es/utils/use-force-update.mjs","../node_modules/framer-motion/dist/es/utils/use-unmount-effect.mjs","../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../node_modules/framer-motion/dist/es/frameloop/render-step.mjs","../node_modules/framer-motion/dist/es/frameloop/batcher.mjs","../node_modules/framer-motion/dist/es/frameloop/frame.mjs","../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/frameloop/microtask.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/value/types/utils.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/easing/utils/map.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/utils/progress.mjs","../node_modules/framer-motion/dist/es/utils/mix/number.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/utils/mix/color.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/utils/mix/complex.mjs","../node_modules/framer-motion/dist/es/utils/mix/index.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","../node_modules/framer-motion/dist/es/frameloop/sync-time.mjs","../node_modules/framer-motion/dist/es/animation/animators/js/driver-frameloop.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs","../node_modules/framer-motion/dist/es/animation/animators/js/index.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/create-accelerated-animation.mjs","../node_modules/framer-motion/dist/es/utils/memo.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../node_modules/framer-motion/dist/es/animation/utils/keyframes.mjs","../node_modules/framer-motion/dist/es/animation/animators/instant.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/utils/get-context-window.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/debug/record.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/single-value.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/store.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/render/dom/motion.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs","../node_modules/framer-motion/dist/es/utils/GlobalConfig.mjs","../node_modules/framer-motion/dist/es/utils/errors.mjs","../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../node_modules/framer-motion/dist/es/utils/noop.mjs","../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../node_modules/framer-motion/dist/es/utils/wrap.mjs","../node_modules/framer-motion/dist/es/utils/use-cycle.mjs","../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs"],"sourcesContent":["/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nvar invariant = function(condition, format, a, b, c, d, e, f) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  }\n\n  if (!condition) {\n    var error;\n    if (format === undefined) {\n      error = new Error(\n        'Minified exception occurred; use the non-minified dev environment ' +\n        'for the full error message and additional helpful warnings.'\n      );\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(\n        format.replace(/%s/g, function() { return args[argIndex++]; })\n      );\n      error.name = 'Invariant Violation';\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n};\n\nmodule.exports = invariant;\n","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardBody = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-body');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardBody.displayName = 'CardBody';\nexport default CardBody;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardFooter = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-footer');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardFooter.displayName = 'CardFooter';\nexport default CardFooter;","\"use client\";\n\nimport * as React from 'react';\nconst context = /*#__PURE__*/React.createContext(null);\ncontext.displayName = 'CardHeaderContext';\nexport default context;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport CardHeaderContext from './CardHeaderContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-header');\n  const contextValue = useMemo(() => ({\n    cardHeaderBsPrefix: prefix\n  }), [prefix]);\n  return /*#__PURE__*/_jsx(CardHeaderContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, prefix)\n    })\n  });\n});\nCardHeader.displayName = 'CardHeader';\nexport default CardHeader;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardImg = /*#__PURE__*/React.forwardRef(\n// Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  bsPrefix,\n  className,\n  variant,\n  as: Component = 'img',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-img');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(variant ? `${prefix}-${variant}` : prefix, className),\n    ...props\n  });\n});\nCardImg.displayName = 'CardImg';\nexport default CardImg;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardImgOverlay = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-img-overlay');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardImgOverlay.displayName = 'CardImgOverlay';\nexport default CardImgOverlay;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardLink = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'a',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-link');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardLink.displayName = 'CardLink';\nexport default CardLink;","import * as React from 'react';\nimport classNames from 'classnames';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default (className => /*#__PURE__*/React.forwardRef((p, ref) => /*#__PURE__*/_jsx(\"div\", {\n  ...p,\n  ref: ref,\n  className: classNames(p.className, className)\n})));","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport divWithClassName from './divWithClassName';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DivStyledAsH6 = divWithClassName('h6');\nconst CardSubtitle = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = DivStyledAsH6,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-subtitle');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardSubtitle.displayName = 'CardSubtitle';\nexport default CardSubtitle;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardText = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'p',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-text');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardText.displayName = 'CardText';\nexport default CardText;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport divWithClassName from './divWithClassName';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DivStyledAsH5 = divWithClassName('h5');\nconst CardTitle = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = DivStyledAsH5,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-title');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardTitle.displayName = 'CardTitle';\nexport default CardTitle;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport CardBody from './CardBody';\nimport CardFooter from './CardFooter';\nimport CardHeader from './CardHeader';\nimport CardImg from './CardImg';\nimport CardImgOverlay from './CardImgOverlay';\nimport CardLink from './CardLink';\nimport CardSubtitle from './CardSubtitle';\nimport CardText from './CardText';\nimport CardTitle from './CardTitle';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Card = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  bg,\n  text,\n  border,\n  body = false,\n  children,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, prefix, bg && `bg-${bg}`, text && `text-${text}`, border && `border-${border}`),\n    children: body ? /*#__PURE__*/_jsx(CardBody, {\n      children: children\n    }) : children\n  });\n});\nCard.displayName = 'Card';\nexport default Object.assign(Card, {\n  Img: CardImg,\n  Title: CardTitle,\n  Subtitle: CardSubtitle,\n  Body: CardBody,\n  Link: CardLink,\n  Text: CardText,\n  Header: CardHeader,\n  Footer: CardFooter,\n  ImgOverlay: CardImgOverlay\n});","import { useEffect, useRef } from 'react';\n\n/**\n * Creates a `Ref` whose value is updated in an effect, ensuring the most recent\n * value is the one rendered with. Generally only required for Concurrent mode usage\n * where previous work in `render()` may be discarded before being used.\n *\n * This is safe to access in an event handler.\n *\n * @param value The `Ref` value\n */\nfunction useCommittedRef(value) {\n  const ref = useRef(value);\n  useEffect(() => {\n    ref.current = value;\n  }, [value]);\n  return ref;\n}\nexport default useCommittedRef;","import { useCallback } from 'react';\nimport useCommittedRef from './useCommittedRef';\nexport default function useEventCallback(fn) {\n  const ref = useCommittedRef(fn);\n  return useCallback(function (...args) {\n    return ref.current && ref.current(...args);\n  }, [ref]);\n}","import { useEffect, useRef } from 'react';\n\n/**\n * Runs an effect only when the dependencies have changed, skipping the\n * initial \"on mount\" run. Caution, if the dependency list never changes,\n * the effect is **never run**\n *\n * ```ts\n *  const ref = useRef<HTMLInput>(null);\n *\n *  // focuses an element only if the focus changes, and not on mount\n *  useUpdateEffect(() => {\n *    const element = ref.current?.children[focusedIdx] as HTMLElement\n *\n *    element?.focus()\n *\n *  }, [focusedIndex])\n * ```\n * @param effect An effect to run on mount\n *\n * @category effects\n */\nfunction useUpdateEffect(fn, deps) {\n  const isFirst = useRef(true);\n  useEffect(() => {\n    if (isFirst.current) {\n      isFirst.current = false;\n      return;\n    }\n    return fn();\n  }, deps);\n}\nexport default useUpdateEffect;","import useUpdatedRef from './useUpdatedRef';\nimport { useEffect } from 'react';\n\n/**\n * Attach a callback that fires when a component unmounts\n *\n * @param fn Handler to run when the component unmounts\n * @category effects\n */\nexport default function useWillUnmount(fn) {\n  const onUnmount = useUpdatedRef(fn);\n  useEffect(() => () => onUnmount.current(), []);\n}","import { useRef } from 'react';\n\n/**\n * Returns a ref that is immediately updated with the new value\n *\n * @param value The Ref value\n * @category refs\n */\nexport default function useUpdatedRef(value) {\n  const valueRef = useRef(value);\n  valueRef.current = value;\n  return valueRef;\n}","import { useMemo, useRef } from 'react';\nimport useMounted from './useMounted';\nimport useWillUnmount from './useWillUnmount';\n\n/*\n * Browsers including Internet Explorer, Chrome, Safari, and Firefox store the\n * delay as a 32-bit signed integer internally. This causes an integer overflow\n * when using delays larger than 2,147,483,647 ms (about 24.8 days),\n * resulting in the timeout being executed immediately.\n *\n * via: https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/setTimeout\n */\nconst MAX_DELAY_MS = 2 ** 31 - 1;\nfunction setChainedTimeout(handleRef, fn, timeoutAtMs) {\n  const delayMs = timeoutAtMs - Date.now();\n  handleRef.current = delayMs <= MAX_DELAY_MS ? setTimeout(fn, delayMs) : setTimeout(() => setChainedTimeout(handleRef, fn, timeoutAtMs), MAX_DELAY_MS);\n}\n\n/**\n * Returns a controller object for setting a timeout that is properly cleaned up\n * once the component unmounts. New timeouts cancel and replace existing ones.\n *\n *\n *\n * ```tsx\n * const { set, clear } = useTimeout();\n * const [hello, showHello] = useState(false);\n * //Display hello after 5 seconds\n * set(() => showHello(true), 5000);\n * return (\n *   <div className=\"App\">\n *     {hello ? <h3>Hello</h3> : null}\n *   </div>\n * );\n * ```\n */\nexport default function useTimeout() {\n  const isMounted = useMounted();\n\n  // types are confused between node and web here IDK\n  const handleRef = useRef();\n  useWillUnmount(() => clearTimeout(handleRef.current));\n  return useMemo(() => {\n    const clear = () => clearTimeout(handleRef.current);\n    function set(fn, delayMs = 0) {\n      if (!isMounted()) return;\n      clear();\n      if (delayMs <= MAX_DELAY_MS) {\n        // For simplicity, if the timeout is short, just set a normal timeout.\n        handleRef.current = setTimeout(fn, delayMs);\n      } else {\n        setChainedTimeout(handleRef, fn, Date.now() + delayMs);\n      }\n    }\n    return {\n      set,\n      clear,\n      handleRef\n    };\n  }, []);\n}","import { useRef, useEffect } from 'react';\n\n/**\n * Track whether a component is current mounted. Generally less preferable than\n * properlly canceling effects so they don't run after a component is unmounted,\n * but helpful in cases where that isn't feasible, such as a `Promise` resolution.\n *\n * @returns a function that returns the current isMounted state of the component\n *\n * ```ts\n * const [data, setData] = useState(null)\n * const isMounted = useMounted()\n *\n * useEffect(() => {\n *   fetchdata().then((newData) => {\n *      if (isMounted()) {\n *        setData(newData);\n *      }\n *   })\n * })\n * ```\n */\nexport default function useMounted() {\n  const mounted = useRef(true);\n  const isMounted = useRef(() => mounted.current);\n  useEffect(() => {\n    mounted.current = true;\n    return () => {\n      mounted.current = false;\n    };\n  }, []);\n  return isMounted.current;\n}","import { useEffect, useLayoutEffect } from 'react';\nconst isReactNative = typeof global !== 'undefined' &&\n// @ts-ignore\nglobal.navigator &&\n// @ts-ignore\nglobal.navigator.product === 'ReactNative';\nconst isDOM = typeof document !== 'undefined';\n\n/**\n * Is `useLayoutEffect` in a DOM or React Native environment, otherwise resolves to useEffect\n * Only useful to avoid the console warning.\n *\n * PREFER `useEffect` UNLESS YOU KNOW WHAT YOU ARE DOING.\n *\n * @category effects\n */\nexport default isDOM || isReactNative ? useLayoutEffect : useEffect;","import { useState } from 'react';\nimport useEffect from './useIsomorphicEffect';\nconst targetMap = new WeakMap();\nlet resizeObserver;\nfunction getResizeObserver() {\n  // eslint-disable-next-line no-return-assign\n  return resizeObserver = resizeObserver || new window.ResizeObserver(entries => {\n    entries.forEach(entry => {\n      const handler = targetMap.get(entry.target);\n      if (handler) handler(entry.contentRect);\n    });\n  });\n}\n\n/**\n * Efficiently observe size changes on an element. Depends on the `ResizeObserver` api,\n * and polyfills are needed in older browsers.\n *\n * ```ts\n * const [ref, attachRef] = useCallbackRef(null);\n *\n * const rect = useResizeObserver(ref);\n *\n * return (\n *  <div ref={attachRef}>\n *    {JSON.stringify(rect)}\n *  </div>\n * )\n * ```\n *\n * @param element The DOM element to observe\n */\nexport default function useResizeObserver(element) {\n  const [rect, setRect] = useState(null);\n  useEffect(() => {\n    if (!element) return;\n    getResizeObserver().observe(element);\n    setRect(element.getBoundingClientRect());\n    targetMap.set(element, rect => {\n      setRect(rect);\n    });\n    return () => {\n      targetMap.delete(element);\n    };\n  }, [element]);\n  return rect;\n}","const _excluded = [\"as\", \"disabled\"];\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function isTrivialHref(href) {\n  return !href || href.trim() === '#';\n}\nexport function useButtonProps({\n  tagName,\n  disabled,\n  href,\n  target,\n  rel,\n  role,\n  onClick,\n  tabIndex = 0,\n  type\n}) {\n  if (!tagName) {\n    if (href != null || target != null || rel != null) {\n      tagName = 'a';\n    } else {\n      tagName = 'button';\n    }\n  }\n  const meta = {\n    tagName\n  };\n  if (tagName === 'button') {\n    return [{\n      type: type || 'button',\n      disabled\n    }, meta];\n  }\n  const handleClick = event => {\n    if (disabled || tagName === 'a' && isTrivialHref(href)) {\n      event.preventDefault();\n    }\n    if (disabled) {\n      event.stopPropagation();\n      return;\n    }\n    onClick == null ? void 0 : onClick(event);\n  };\n  const handleKeyDown = event => {\n    if (event.key === ' ') {\n      event.preventDefault();\n      handleClick(event);\n    }\n  };\n  if (tagName === 'a') {\n    // Ensure there's a href so Enter can trigger anchor button.\n    href || (href = '#');\n    if (disabled) {\n      href = undefined;\n    }\n  }\n  return [{\n    role: role != null ? role : 'button',\n    // explicitly undefined so that it overrides the props disabled in a spread\n    // e.g. <Tag {...props} {...hookProps} />\n    disabled: undefined,\n    tabIndex: disabled ? undefined : tabIndex,\n    href,\n    target: tagName === 'a' ? target : undefined,\n    'aria-disabled': !disabled ? undefined : disabled,\n    rel: tagName === 'a' ? rel : undefined,\n    onClick: handleClick,\n    onKeyDown: handleKeyDown\n  }, meta];\n}\nconst Button = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n      as: asProp,\n      disabled\n    } = _ref,\n    props = _objectWithoutPropertiesLoose(_ref, _excluded);\n  const [buttonProps, {\n    tagName: Component\n  }] = useButtonProps(Object.assign({\n    tagName: asProp,\n    disabled\n  }, props));\n  return /*#__PURE__*/_jsx(Component, Object.assign({}, props, buttonProps, {\n    ref: ref\n  }));\n});\nButton.displayName = 'Button';\nexport default Button;","const _excluded = [\"onKeyDown\"];\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* eslint-disable jsx-a11y/no-static-element-interactions */\n/* eslint-disable jsx-a11y/anchor-has-content */\n\nimport * as React from 'react';\nimport { useEventCallback } from '@restart/hooks';\nimport { useButtonProps } from './Button';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function isTrivialHref(href) {\n  return !href || href.trim() === '#';\n}\n/**\n * An generic `<a>` component that covers a few A11y cases, ensuring that\n * cases where the `href` is missing or trivial like \"#\" are treated like buttons.\n */\nconst Anchor = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n      onKeyDown\n    } = _ref,\n    props = _objectWithoutPropertiesLoose(_ref, _excluded);\n  const [buttonProps] = useButtonProps(Object.assign({\n    tagName: 'a'\n  }, props));\n  const handleKeyDown = useEventCallback(e => {\n    buttonProps.onKeyDown(e);\n    onKeyDown == null ? void 0 : onKeyDown(e);\n  });\n  if (isTrivialHref(props.href) || props.role === 'button') {\n    return /*#__PURE__*/_jsx(\"a\", Object.assign({\n      ref: ref\n    }, props, buttonProps, {\n      onKeyDown: handleKeyDown\n    }));\n  }\n  return /*#__PURE__*/_jsx(\"a\", Object.assign({\n    ref: ref\n  }, props, {\n    onKeyDown: onKeyDown\n  }));\n});\nAnchor.displayName = 'Anchor';\nexport default Anchor;","export default function _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}","import invariant from 'invariant';\n\nvar noop = function noop() {};\n\nfunction readOnlyPropType(handler, name) {\n  return function (props, propName) {\n    if (props[propName] !== undefined) {\n      if (!props[handler]) {\n        return new Error(\"You have provided a `\" + propName + \"` prop to `\" + name + \"` \" + (\"without an `\" + handler + \"` handler prop. This will render a read-only field. \") + (\"If the field should be mutable use `\" + defaultKey(propName) + \"`. \") + (\"Otherwise, set `\" + handler + \"`.\"));\n      }\n    }\n  };\n}\n\nexport function uncontrolledPropTypes(controlledValues, displayName) {\n  var propTypes = {};\n  Object.keys(controlledValues).forEach(function (prop) {\n    // add default propTypes for folks that use runtime checks\n    propTypes[defaultKey(prop)] = noop;\n\n    if (process.env.NODE_ENV !== 'production') {\n      var handler = controlledValues[prop];\n      !(typeof handler === 'string' && handler.trim().length) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Uncontrollable - [%s]: the prop `%s` needs a valid handler key name in order to make it uncontrollable', displayName, prop) : invariant(false) : void 0;\n      propTypes[prop] = readOnlyPropType(handler, displayName);\n    }\n  });\n  return propTypes;\n}\nexport function isProp(props, prop) {\n  return props[prop] !== undefined;\n}\nexport function defaultKey(key) {\n  return 'default' + key.charAt(0).toUpperCase() + key.substr(1);\n}\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\nexport function canAcceptRef(component) {\n  return !!component && (typeof component !== 'function' || component.prototype && component.prototype.isReactComponent);\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\n\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\n\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\n\nimport { useCallback, useRef, useState } from 'react';\nimport * as Utils from './utils';\n\nfunction useUncontrolledProp(propValue, defaultValue, handler) {\n  var wasPropRef = useRef(propValue !== undefined);\n\n  var _useState = useState(defaultValue),\n      stateValue = _useState[0],\n      setState = _useState[1];\n\n  var isProp = propValue !== undefined;\n  var wasProp = wasPropRef.current;\n  wasPropRef.current = isProp;\n  /**\n   * If a prop switches from controlled to Uncontrolled\n   * reset its value to the defaultValue\n   */\n\n  if (!isProp && wasProp && stateValue !== defaultValue) {\n    setState(defaultValue);\n  }\n\n  return [isProp ? propValue : stateValue, useCallback(function (value) {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    if (handler) handler.apply(void 0, [value].concat(args));\n    setState(value);\n  }, [handler])];\n}\n\nexport { useUncontrolledProp };\nexport default function useUncontrolled(props, config) {\n  return Object.keys(config).reduce(function (result, fieldName) {\n    var _extends2;\n\n    var _ref = result,\n        defaultValue = _ref[Utils.defaultKey(fieldName)],\n        propsValue = _ref[fieldName],\n        rest = _objectWithoutPropertiesLoose(_ref, [Utils.defaultKey(fieldName), fieldName].map(_toPropertyKey));\n\n    var handlerName = config[fieldName];\n\n    var _useUncontrolledProp = useUncontrolledProp(propsValue, defaultValue, props[handlerName]),\n        value = _useUncontrolledProp[0],\n        handler = _useUncontrolledProp[1];\n\n    return _extends({}, rest, (_extends2 = {}, _extends2[fieldName] = value, _extends2[handlerName] = handler, _extends2));\n  }, props);\n}","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nfunction componentWillMount() {\n  // Call this.constructor.gDSFP to support sub-classes.\n  var state = this.constructor.getDerivedStateFromProps(this.props, this.state);\n  if (state !== null && state !== undefined) {\n    this.setState(state);\n  }\n}\n\nfunction componentWillReceiveProps(nextProps) {\n  // Call this.constructor.gDSFP to support sub-classes.\n  // Use the setState() updater to ensure state isn't stale in certain edge cases.\n  function updater(prevState) {\n    var state = this.constructor.getDerivedStateFromProps(nextProps, prevState);\n    return state !== null && state !== undefined ? state : null;\n  }\n  // Binding \"this\" is important for shallow renderer support.\n  this.setState(updater.bind(this));\n}\n\nfunction componentWillUpdate(nextProps, nextState) {\n  try {\n    var prevProps = this.props;\n    var prevState = this.state;\n    this.props = nextProps;\n    this.state = nextState;\n    this.__reactInternalSnapshotFlag = true;\n    this.__reactInternalSnapshot = this.getSnapshotBeforeUpdate(\n      prevProps,\n      prevState\n    );\n  } finally {\n    this.props = prevProps;\n    this.state = prevState;\n  }\n}\n\n// React may warn about cWM/cWRP/cWU methods being deprecated.\n// Add a flag to suppress these warnings for this special case.\ncomponentWillMount.__suppressDeprecationWarning = true;\ncomponentWillReceiveProps.__suppressDeprecationWarning = true;\ncomponentWillUpdate.__suppressDeprecationWarning = true;\n\nfunction polyfill(Component) {\n  var prototype = Component.prototype;\n\n  if (!prototype || !prototype.isReactComponent) {\n    throw new Error('Can only polyfill class components');\n  }\n\n  if (\n    typeof Component.getDerivedStateFromProps !== 'function' &&\n    typeof prototype.getSnapshotBeforeUpdate !== 'function'\n  ) {\n    return Component;\n  }\n\n  // If new component APIs are defined, \"unsafe\" lifecycles won't be called.\n  // Error if any of these lifecycles are present,\n  // Because they would work differently between older and newer (16.3+) versions of React.\n  var foundWillMountName = null;\n  var foundWillReceivePropsName = null;\n  var foundWillUpdateName = null;\n  if (typeof prototype.componentWillMount === 'function') {\n    foundWillMountName = 'componentWillMount';\n  } else if (typeof prototype.UNSAFE_componentWillMount === 'function') {\n    foundWillMountName = 'UNSAFE_componentWillMount';\n  }\n  if (typeof prototype.componentWillReceiveProps === 'function') {\n    foundWillReceivePropsName = 'componentWillReceiveProps';\n  } else if (typeof prototype.UNSAFE_componentWillReceiveProps === 'function') {\n    foundWillReceivePropsName = 'UNSAFE_componentWillReceiveProps';\n  }\n  if (typeof prototype.componentWillUpdate === 'function') {\n    foundWillUpdateName = 'componentWillUpdate';\n  } else if (typeof prototype.UNSAFE_componentWillUpdate === 'function') {\n    foundWillUpdateName = 'UNSAFE_componentWillUpdate';\n  }\n  if (\n    foundWillMountName !== null ||\n    foundWillReceivePropsName !== null ||\n    foundWillUpdateName !== null\n  ) {\n    var componentName = Component.displayName || Component.name;\n    var newApiName =\n      typeof Component.getDerivedStateFromProps === 'function'\n        ? 'getDerivedStateFromProps()'\n        : 'getSnapshotBeforeUpdate()';\n\n    throw Error(\n      'Unsafe legacy lifecycles will not be called for components using new component APIs.\\n\\n' +\n        componentName +\n        ' uses ' +\n        newApiName +\n        ' but also contains the following legacy lifecycles:' +\n        (foundWillMountName !== null ? '\\n  ' + foundWillMountName : '') +\n        (foundWillReceivePropsName !== null\n          ? '\\n  ' + foundWillReceivePropsName\n          : '') +\n        (foundWillUpdateName !== null ? '\\n  ' + foundWillUpdateName : '') +\n        '\\n\\nThe above lifecycles should be removed. Learn more about this warning here:\\n' +\n        'https://fb.me/react-async-component-lifecycle-hooks'\n    );\n  }\n\n  // React <= 16.2 does not support static getDerivedStateFromProps.\n  // As a workaround, use cWM and cWRP to invoke the new static lifecycle.\n  // Newer versions of React will ignore these lifecycles if gDSFP exists.\n  if (typeof Component.getDerivedStateFromProps === 'function') {\n    prototype.componentWillMount = componentWillMount;\n    prototype.componentWillReceiveProps = componentWillReceiveProps;\n  }\n\n  // React <= 16.2 does not support getSnapshotBeforeUpdate.\n  // As a workaround, use cWU to invoke the new lifecycle.\n  // Newer versions of React will ignore that lifecycle if gSBU exists.\n  if (typeof prototype.getSnapshotBeforeUpdate === 'function') {\n    if (typeof prototype.componentDidUpdate !== 'function') {\n      throw new Error(\n        'Cannot polyfill getSnapshotBeforeUpdate() for components that do not define componentDidUpdate() on the prototype'\n      );\n    }\n\n    prototype.componentWillUpdate = componentWillUpdate;\n\n    var componentDidUpdate = prototype.componentDidUpdate;\n\n    prototype.componentDidUpdate = function componentDidUpdatePolyfill(\n      prevProps,\n      prevState,\n      maybeSnapshot\n    ) {\n      // 16.3+ will not execute our will-update method;\n      // It will pass a snapshot value to did-update though.\n      // Older versions will require our polyfilled will-update value.\n      // We need to handle both cases, but can't just check for the presence of \"maybeSnapshot\",\n      // Because for <= 15.x versions this might be a \"prevContext\" object.\n      // We also can't just check \"__reactInternalSnapshot\",\n      // Because get-snapshot might return a falsy value.\n      // So check for the explicit __reactInternalSnapshotFlag flag to determine behavior.\n      var snapshot = this.__reactInternalSnapshotFlag\n        ? this.__reactInternalSnapshot\n        : maybeSnapshot;\n\n      componentDidUpdate.call(this, prevProps, prevState, snapshot);\n    };\n  }\n\n  return Component;\n}\n\nexport { polyfill };\n","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CarouselCaption = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'carousel-caption');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCarouselCaption.displayName = 'CarouselCaption';\nexport default CarouselCaption;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CarouselItem = /*#__PURE__*/React.forwardRef(({\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  bsPrefix,\n  className,\n  ...props\n}, ref) => {\n  const finalClassName = classNames(className, useBootstrapPrefix(bsPrefix, 'carousel-item'));\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: finalClassName\n  });\n});\nCarouselItem.displayName = 'CarouselItem';\nexport default CarouselItem;","import * as React from 'react';\n\n/**\n * Iterates through children that are typically specified as `props.children`,\n * but only maps over children that are \"valid elements\".\n *\n * The mapFunction provided index will be normalised to the components mapped,\n * so an invalid component would not increase the index.\n *\n */\nfunction map(children, func) {\n  let index = 0;\n  return React.Children.map(children, child => /*#__PURE__*/React.isValidElement(child) ? func(child, index++) : child);\n}\n\n/**\n * Iterates through children that are \"valid elements\".\n *\n * The provided forEachFunc(child, index) will be called for each\n * leaf child with the index reflecting the position relative to \"valid components\".\n */\nfunction forEach(children, func) {\n  let index = 0;\n  React.Children.forEach(children, child => {\n    if ( /*#__PURE__*/React.isValidElement(child)) func(child, index++);\n  });\n}\n\n/**\n * Finds whether a component's `children` prop includes a React element of the\n * specified type.\n */\nfunction hasChildOfType(children, type) {\n  return React.Children.toArray(children).some(child => /*#__PURE__*/React.isValidElement(child) && child.type === type);\n}\nexport { map, forEach, hasChildOfType };","import ownerDocument from './ownerDocument';\n/**\n * Returns the owner window of a given element.\n * \n * @param node the element\n */\n\nexport default function ownerWindow(node) {\n  var doc = ownerDocument(node);\n  return doc && doc.defaultView || window;\n}","/**\n * Returns the owner document of a given element.\n * \n * @param node the element\n */\nexport default function ownerDocument(node) {\n  return node && node.ownerDocument || document;\n}","var rUpper = /([A-Z])/g;\nexport default function hyphenate(string) {\n  return string.replace(rUpper, '-$1').toLowerCase();\n}","/**\n * Copyright 2013-2014, Facebook, Inc.\n * All rights reserved.\n * https://github.com/facebook/react/blob/2aeb8a2a6beb00617a4217f7f8284924fa2ad819/src/vendor/core/hyphenateStyleName.js\n */\nimport hyphenate from './hyphenate';\nvar msPattern = /^ms-/;\nexport default function hyphenateStyleName(string) {\n  return hyphenate(string).replace(msPattern, '-ms-');\n}","var supportedTransforms = /^((translate|rotate|scale)(X|Y|Z|3d)?|matrix(3d)?|perspective|skew(X|Y)?)$/i;\nexport default function isTransform(value) {\n  return !!(value && supportedTransforms.test(value));\n}","import getComputedStyle from './getComputedStyle';\nimport hyphenate from './hyphenateStyle';\nimport isTransform from './isTransform';\n\nfunction style(node, property) {\n  var css = '';\n  var transforms = '';\n\n  if (typeof property === 'string') {\n    return node.style.getPropertyValue(hyphenate(property)) || getComputedStyle(node).getPropertyValue(hyphenate(property));\n  }\n\n  Object.keys(property).forEach(function (key) {\n    var value = property[key];\n\n    if (!value && value !== 0) {\n      node.style.removeProperty(hyphenate(key));\n    } else if (isTransform(key)) {\n      transforms += key + \"(\" + value + \") \";\n    } else {\n      css += hyphenate(key) + \": \" + value + \";\";\n    }\n  });\n\n  if (transforms) {\n    css += \"transform: \" + transforms + \";\";\n  }\n\n  node.style.cssText += \";\" + css;\n}\n\nexport default style;","import ownerWindow from './ownerWindow';\n/**\n * Returns one or all computed style properties of an element.\n * \n * @param node the element\n * @param psuedoElement the style property\n */\n\nexport default function getComputedStyle(node, psuedoElement) {\n  return ownerWindow(node).getComputedStyle(node, psuedoElement);\n}","export default !!(typeof window !== 'undefined' && window.document && window.document.createElement);","/* eslint-disable no-return-assign */\nimport canUseDOM from './canUseDOM';\nexport var optionsSupported = false;\nexport var onceSupported = false;\n\ntry {\n  var options = {\n    get passive() {\n      return optionsSupported = true;\n    },\n\n    get once() {\n      // eslint-disable-next-line no-multi-assign\n      return onceSupported = optionsSupported = true;\n    }\n\n  };\n\n  if (canUseDOM) {\n    window.addEventListener('test', options, options);\n    window.removeEventListener('test', options, true);\n  }\n} catch (e) {\n  /* */\n}\n\n/**\n * An `addEventListener` ponyfill, supports the `once` option\n * \n * @param node the element\n * @param eventName the event name\n * @param handle the handler\n * @param options event options\n */\nfunction addEventListener(node, eventName, handler, options) {\n  if (options && typeof options !== 'boolean' && !onceSupported) {\n    var once = options.once,\n        capture = options.capture;\n    var wrappedHandler = handler;\n\n    if (!onceSupported && once) {\n      wrappedHandler = handler.__once || function onceHandler(event) {\n        this.removeEventListener(eventName, onceHandler, capture);\n        handler.call(this, event);\n      };\n\n      handler.__once = wrappedHandler;\n    }\n\n    node.addEventListener(eventName, wrappedHandler, optionsSupported ? options : capture);\n  }\n\n  node.addEventListener(eventName, handler, options);\n}\n\nexport default addEventListener;","/**\n * A `removeEventListener` ponyfill\n * \n * @param node the element\n * @param eventName the event name\n * @param handle the handler\n * @param options event options\n */\nfunction removeEventListener(node, eventName, handler, options) {\n  var capture = options && typeof options !== 'boolean' ? options.capture : options;\n  node.removeEventListener(eventName, handler, capture);\n\n  if (handler.__once) {\n    node.removeEventListener(eventName, handler.__once, capture);\n  }\n}\n\nexport default removeEventListener;","import addEventListener from './addEventListener';\nimport removeEventListener from './removeEventListener';\n\nfunction listen(node, eventName, handler, options) {\n  addEventListener(node, eventName, handler, options);\n  return function () {\n    removeEventListener(node, eventName, handler, options);\n  };\n}\n\nexport default listen;","import css from './css';\nimport listen from './listen';\nimport triggerEvent from './triggerEvent';\n\nfunction parseDuration(node) {\n  var str = css(node, 'transitionDuration') || '';\n  var mult = str.indexOf('ms') === -1 ? 1000 : 1;\n  return parseFloat(str) * mult;\n}\n\nfunction emulateTransitionEnd(element, duration, padding) {\n  if (padding === void 0) {\n    padding = 5;\n  }\n\n  var called = false;\n  var handle = setTimeout(function () {\n    if (!called) triggerEvent(element, 'transitionend', true);\n  }, duration + padding);\n  var remove = listen(element, 'transitionend', function () {\n    called = true;\n  }, {\n    once: true\n  });\n  return function () {\n    clearTimeout(handle);\n    remove();\n  };\n}\n\nexport default function transitionEnd(element, handler, duration, padding) {\n  if (duration == null) duration = parseDuration(element) || 0;\n  var removeEmulate = emulateTransitionEnd(element, duration, padding);\n  var remove = listen(element, 'transitionend', handler);\n  return function () {\n    removeEmulate();\n    remove();\n  };\n}","/**\n * Triggers an event on a given element.\n * \n * @param node the element\n * @param eventName the event name to trigger\n * @param bubbles whether the event should bubble up\n * @param cancelable whether the event should be cancelable\n */\nexport default function triggerEvent(node, eventName, bubbles, cancelable) {\n  if (bubbles === void 0) {\n    bubbles = false;\n  }\n\n  if (cancelable === void 0) {\n    cancelable = true;\n  }\n\n  if (node) {\n    var event = document.createEvent('HTMLEvents');\n    event.initEvent(eventName, bubbles, cancelable);\n    node.dispatchEvent(event);\n  }\n}","import css from 'dom-helpers/css';\nimport transitionEnd from 'dom-helpers/transitionEnd';\nfunction parseDuration(node, property) {\n  const str = css(node, property) || '';\n  const mult = str.indexOf('ms') === -1 ? 1000 : 1;\n  return parseFloat(str) * mult;\n}\nexport default function transitionEndListener(element, handler) {\n  const duration = parseDuration(element, 'transitionDuration');\n  const delay = parseDuration(element, 'transitionDelay');\n  const remove = transitionEnd(element, e => {\n    if (e.target === element) {\n      remove();\n      handler(e);\n    }\n  }, duration + delay);\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}","export default {\n  disabled: false\n};","import React from 'react';\nexport default React.createContext(null);","export var forceReflow = function forceReflow(node) {\n  return node.scrollTop;\n};","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport config from './config';\nimport { timeoutsShape } from './utils/PropTypes';\nimport TransitionGroupContext from './TransitionGroupContext';\nimport { forceReflow } from './utils/reflow';\nexport var UNMOUNTED = 'unmounted';\nexport var EXITED = 'exited';\nexport var ENTERING = 'entering';\nexport var ENTERED = 'entered';\nexport var EXITING = 'exiting';\n/**\n * The Transition component lets you describe a transition from one component\n * state to another _over time_ with a simple declarative API. Most commonly\n * it's used to animate the mounting and unmounting of a component, but can also\n * be used to describe in-place transition states as well.\n *\n * ---\n *\n * **Note**: `Transition` is a platform-agnostic base component. If you're using\n * transitions in CSS, you'll probably want to use\n * [`CSSTransition`](https://reactcommunity.org/react-transition-group/css-transition)\n * instead. It inherits all the features of `Transition`, but contains\n * additional features necessary to play nice with CSS transitions (hence the\n * name of the component).\n *\n * ---\n *\n * By default the `Transition` component does not alter the behavior of the\n * component it renders, it only tracks \"enter\" and \"exit\" states for the\n * components. It's up to you to give meaning and effect to those states. For\n * example we can add styles to a component when it enters or exits:\n *\n * ```jsx\n * import { Transition } from 'react-transition-group';\n *\n * const duration = 300;\n *\n * const defaultStyle = {\n *   transition: `opacity ${duration}ms ease-in-out`,\n *   opacity: 0,\n * }\n *\n * const transitionStyles = {\n *   entering: { opacity: 1 },\n *   entered:  { opacity: 1 },\n *   exiting:  { opacity: 0 },\n *   exited:  { opacity: 0 },\n * };\n *\n * const Fade = ({ in: inProp }) => (\n *   <Transition in={inProp} timeout={duration}>\n *     {state => (\n *       <div style={{\n *         ...defaultStyle,\n *         ...transitionStyles[state]\n *       }}>\n *         I'm a fade Transition!\n *       </div>\n *     )}\n *   </Transition>\n * );\n * ```\n *\n * There are 4 main states a Transition can be in:\n *  - `'entering'`\n *  - `'entered'`\n *  - `'exiting'`\n *  - `'exited'`\n *\n * Transition state is toggled via the `in` prop. When `true` the component\n * begins the \"Enter\" stage. During this stage, the component will shift from\n * its current transition state, to `'entering'` for the duration of the\n * transition and then to the `'entered'` stage once it's complete. Let's take\n * the following example (we'll use the\n * [useState](https://reactjs.org/docs/hooks-reference.html#usestate) hook):\n *\n * ```jsx\n * function App() {\n *   const [inProp, setInProp] = useState(false);\n *   return (\n *     <div>\n *       <Transition in={inProp} timeout={500}>\n *         {state => (\n *           // ...\n *         )}\n *       </Transition>\n *       <button onClick={() => setInProp(true)}>\n *         Click to Enter\n *       </button>\n *     </div>\n *   );\n * }\n * ```\n *\n * When the button is clicked the component will shift to the `'entering'` state\n * and stay there for 500ms (the value of `timeout`) before it finally switches\n * to `'entered'`.\n *\n * When `in` is `false` the same thing happens except the state moves from\n * `'exiting'` to `'exited'`.\n */\n\nvar Transition = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(Transition, _React$Component);\n\n  function Transition(props, context) {\n    var _this;\n\n    _this = _React$Component.call(this, props, context) || this;\n    var parentGroup = context; // In the context of a TransitionGroup all enters are really appears\n\n    var appear = parentGroup && !parentGroup.isMounting ? props.enter : props.appear;\n    var initialStatus;\n    _this.appearStatus = null;\n\n    if (props.in) {\n      if (appear) {\n        initialStatus = EXITED;\n        _this.appearStatus = ENTERING;\n      } else {\n        initialStatus = ENTERED;\n      }\n    } else {\n      if (props.unmountOnExit || props.mountOnEnter) {\n        initialStatus = UNMOUNTED;\n      } else {\n        initialStatus = EXITED;\n      }\n    }\n\n    _this.state = {\n      status: initialStatus\n    };\n    _this.nextCallback = null;\n    return _this;\n  }\n\n  Transition.getDerivedStateFromProps = function getDerivedStateFromProps(_ref, prevState) {\n    var nextIn = _ref.in;\n\n    if (nextIn && prevState.status === UNMOUNTED) {\n      return {\n        status: EXITED\n      };\n    }\n\n    return null;\n  } // getSnapshotBeforeUpdate(prevProps) {\n  //   let nextStatus = null\n  //   if (prevProps !== this.props) {\n  //     const { status } = this.state\n  //     if (this.props.in) {\n  //       if (status !== ENTERING && status !== ENTERED) {\n  //         nextStatus = ENTERING\n  //       }\n  //     } else {\n  //       if (status === ENTERING || status === ENTERED) {\n  //         nextStatus = EXITING\n  //       }\n  //     }\n  //   }\n  //   return { nextStatus }\n  // }\n  ;\n\n  var _proto = Transition.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.updateStatus(true, this.appearStatus);\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    var nextStatus = null;\n\n    if (prevProps !== this.props) {\n      var status = this.state.status;\n\n      if (this.props.in) {\n        if (status !== ENTERING && status !== ENTERED) {\n          nextStatus = ENTERING;\n        }\n      } else {\n        if (status === ENTERING || status === ENTERED) {\n          nextStatus = EXITING;\n        }\n      }\n    }\n\n    this.updateStatus(false, nextStatus);\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.cancelNextCallback();\n  };\n\n  _proto.getTimeouts = function getTimeouts() {\n    var timeout = this.props.timeout;\n    var exit, enter, appear;\n    exit = enter = appear = timeout;\n\n    if (timeout != null && typeof timeout !== 'number') {\n      exit = timeout.exit;\n      enter = timeout.enter; // TODO: remove fallback for next major\n\n      appear = timeout.appear !== undefined ? timeout.appear : enter;\n    }\n\n    return {\n      exit: exit,\n      enter: enter,\n      appear: appear\n    };\n  };\n\n  _proto.updateStatus = function updateStatus(mounting, nextStatus) {\n    if (mounting === void 0) {\n      mounting = false;\n    }\n\n    if (nextStatus !== null) {\n      // nextStatus will always be ENTERING or EXITING.\n      this.cancelNextCallback();\n\n      if (nextStatus === ENTERING) {\n        if (this.props.unmountOnExit || this.props.mountOnEnter) {\n          var node = this.props.nodeRef ? this.props.nodeRef.current : ReactDOM.findDOMNode(this); // https://github.com/reactjs/react-transition-group/pull/749\n          // With unmountOnExit or mountOnEnter, the enter animation should happen at the transition between `exited` and `entering`.\n          // To make the animation happen,  we have to separate each rendering and avoid being processed as batched.\n\n          if (node) forceReflow(node);\n        }\n\n        this.performEnter(mounting);\n      } else {\n        this.performExit();\n      }\n    } else if (this.props.unmountOnExit && this.state.status === EXITED) {\n      this.setState({\n        status: UNMOUNTED\n      });\n    }\n  };\n\n  _proto.performEnter = function performEnter(mounting) {\n    var _this2 = this;\n\n    var enter = this.props.enter;\n    var appearing = this.context ? this.context.isMounting : mounting;\n\n    var _ref2 = this.props.nodeRef ? [appearing] : [ReactDOM.findDOMNode(this), appearing],\n        maybeNode = _ref2[0],\n        maybeAppearing = _ref2[1];\n\n    var timeouts = this.getTimeouts();\n    var enterTimeout = appearing ? timeouts.appear : timeouts.enter; // no enter animation skip right to ENTERED\n    // if we are mounting and running this it means appear _must_ be set\n\n    if (!mounting && !enter || config.disabled) {\n      this.safeSetState({\n        status: ENTERED\n      }, function () {\n        _this2.props.onEntered(maybeNode);\n      });\n      return;\n    }\n\n    this.props.onEnter(maybeNode, maybeAppearing);\n    this.safeSetState({\n      status: ENTERING\n    }, function () {\n      _this2.props.onEntering(maybeNode, maybeAppearing);\n\n      _this2.onTransitionEnd(enterTimeout, function () {\n        _this2.safeSetState({\n          status: ENTERED\n        }, function () {\n          _this2.props.onEntered(maybeNode, maybeAppearing);\n        });\n      });\n    });\n  };\n\n  _proto.performExit = function performExit() {\n    var _this3 = this;\n\n    var exit = this.props.exit;\n    var timeouts = this.getTimeouts();\n    var maybeNode = this.props.nodeRef ? undefined : ReactDOM.findDOMNode(this); // no exit animation skip right to EXITED\n\n    if (!exit || config.disabled) {\n      this.safeSetState({\n        status: EXITED\n      }, function () {\n        _this3.props.onExited(maybeNode);\n      });\n      return;\n    }\n\n    this.props.onExit(maybeNode);\n    this.safeSetState({\n      status: EXITING\n    }, function () {\n      _this3.props.onExiting(maybeNode);\n\n      _this3.onTransitionEnd(timeouts.exit, function () {\n        _this3.safeSetState({\n          status: EXITED\n        }, function () {\n          _this3.props.onExited(maybeNode);\n        });\n      });\n    });\n  };\n\n  _proto.cancelNextCallback = function cancelNextCallback() {\n    if (this.nextCallback !== null) {\n      this.nextCallback.cancel();\n      this.nextCallback = null;\n    }\n  };\n\n  _proto.safeSetState = function safeSetState(nextState, callback) {\n    // This shouldn't be necessary, but there are weird race conditions with\n    // setState callbacks and unmounting in testing, so always make sure that\n    // we can cancel any pending setState callbacks after we unmount.\n    callback = this.setNextCallback(callback);\n    this.setState(nextState, callback);\n  };\n\n  _proto.setNextCallback = function setNextCallback(callback) {\n    var _this4 = this;\n\n    var active = true;\n\n    this.nextCallback = function (event) {\n      if (active) {\n        active = false;\n        _this4.nextCallback = null;\n        callback(event);\n      }\n    };\n\n    this.nextCallback.cancel = function () {\n      active = false;\n    };\n\n    return this.nextCallback;\n  };\n\n  _proto.onTransitionEnd = function onTransitionEnd(timeout, handler) {\n    this.setNextCallback(handler);\n    var node = this.props.nodeRef ? this.props.nodeRef.current : ReactDOM.findDOMNode(this);\n    var doesNotHaveTimeoutOrListener = timeout == null && !this.props.addEndListener;\n\n    if (!node || doesNotHaveTimeoutOrListener) {\n      setTimeout(this.nextCallback, 0);\n      return;\n    }\n\n    if (this.props.addEndListener) {\n      var _ref3 = this.props.nodeRef ? [this.nextCallback] : [node, this.nextCallback],\n          maybeNode = _ref3[0],\n          maybeNextCallback = _ref3[1];\n\n      this.props.addEndListener(maybeNode, maybeNextCallback);\n    }\n\n    if (timeout != null) {\n      setTimeout(this.nextCallback, timeout);\n    }\n  };\n\n  _proto.render = function render() {\n    var status = this.state.status;\n\n    if (status === UNMOUNTED) {\n      return null;\n    }\n\n    var _this$props = this.props,\n        children = _this$props.children,\n        _in = _this$props.in,\n        _mountOnEnter = _this$props.mountOnEnter,\n        _unmountOnExit = _this$props.unmountOnExit,\n        _appear = _this$props.appear,\n        _enter = _this$props.enter,\n        _exit = _this$props.exit,\n        _timeout = _this$props.timeout,\n        _addEndListener = _this$props.addEndListener,\n        _onEnter = _this$props.onEnter,\n        _onEntering = _this$props.onEntering,\n        _onEntered = _this$props.onEntered,\n        _onExit = _this$props.onExit,\n        _onExiting = _this$props.onExiting,\n        _onExited = _this$props.onExited,\n        _nodeRef = _this$props.nodeRef,\n        childProps = _objectWithoutPropertiesLoose(_this$props, [\"children\", \"in\", \"mountOnEnter\", \"unmountOnExit\", \"appear\", \"enter\", \"exit\", \"timeout\", \"addEndListener\", \"onEnter\", \"onEntering\", \"onEntered\", \"onExit\", \"onExiting\", \"onExited\", \"nodeRef\"]);\n\n    return (\n      /*#__PURE__*/\n      // allows for nested Transitions\n      React.createElement(TransitionGroupContext.Provider, {\n        value: null\n      }, typeof children === 'function' ? children(status, childProps) : React.cloneElement(React.Children.only(children), childProps))\n    );\n  };\n\n  return Transition;\n}(React.Component);\n\nTransition.contextType = TransitionGroupContext;\nTransition.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * A React reference to DOM element that need to transition:\n   * https://stackoverflow.com/a/51127130/4671932\n   *\n   *   - When `nodeRef` prop is used, `node` is not passed to callback functions\n   *      (e.g. `onEnter`) because user already has direct access to the node.\n   *   - When changing `key` prop of `Transition` in a `TransitionGroup` a new\n   *     `nodeRef` need to be provided to `Transition` with changed `key` prop\n   *     (see\n   *     [test/CSSTransition-test.js](https://github.com/reactjs/react-transition-group/blob/13435f897b3ab71f6e19d724f145596f5910581c/test/CSSTransition-test.js#L362-L437)).\n   */\n  nodeRef: PropTypes.shape({\n    current: typeof Element === 'undefined' ? PropTypes.any : function (propValue, key, componentName, location, propFullName, secret) {\n      var value = propValue[key];\n      return PropTypes.instanceOf(value && 'ownerDocument' in value ? value.ownerDocument.defaultView.Element : Element)(propValue, key, componentName, location, propFullName, secret);\n    }\n  }),\n\n  /**\n   * A `function` child can be used instead of a React element. This function is\n   * called with the current transition status (`'entering'`, `'entered'`,\n   * `'exiting'`, `'exited'`), which can be used to apply context\n   * specific props to a component.\n   *\n   * ```jsx\n   * <Transition in={this.state.in} timeout={150}>\n   *   {state => (\n   *     <MyComponent className={`fade fade-${state}`} />\n   *   )}\n   * </Transition>\n   * ```\n   */\n  children: PropTypes.oneOfType([PropTypes.func.isRequired, PropTypes.element.isRequired]).isRequired,\n\n  /**\n   * Show the component; triggers the enter or exit states\n   */\n  in: PropTypes.bool,\n\n  /**\n   * By default the child component is mounted immediately along with\n   * the parent `Transition` component. If you want to \"lazy mount\" the component on the\n   * first `in={true}` you can set `mountOnEnter`. After the first enter transition the component will stay\n   * mounted, even on \"exited\", unless you also specify `unmountOnExit`.\n   */\n  mountOnEnter: PropTypes.bool,\n\n  /**\n   * By default the child component stays mounted after it reaches the `'exited'` state.\n   * Set `unmountOnExit` if you'd prefer to unmount the component after it finishes exiting.\n   */\n  unmountOnExit: PropTypes.bool,\n\n  /**\n   * By default the child component does not perform the enter transition when\n   * it first mounts, regardless of the value of `in`. If you want this\n   * behavior, set both `appear` and `in` to `true`.\n   *\n   * > **Note**: there are no special appear states like `appearing`/`appeared`, this prop\n   * > only adds an additional enter transition. However, in the\n   * > `<CSSTransition>` component that first enter transition does result in\n   * > additional `.appear-*` classes, that way you can choose to style it\n   * > differently.\n   */\n  appear: PropTypes.bool,\n\n  /**\n   * Enable or disable enter transitions.\n   */\n  enter: PropTypes.bool,\n\n  /**\n   * Enable or disable exit transitions.\n   */\n  exit: PropTypes.bool,\n\n  /**\n   * The duration of the transition, in milliseconds.\n   * Required unless `addEndListener` is provided.\n   *\n   * You may specify a single timeout for all transitions:\n   *\n   * ```jsx\n   * timeout={500}\n   * ```\n   *\n   * or individually:\n   *\n   * ```jsx\n   * timeout={{\n   *  appear: 500,\n   *  enter: 300,\n   *  exit: 500,\n   * }}\n   * ```\n   *\n   * - `appear` defaults to the value of `enter`\n   * - `enter` defaults to `0`\n   * - `exit` defaults to `0`\n   *\n   * @type {number | { enter?: number, exit?: number, appear?: number }}\n   */\n  timeout: function timeout(props) {\n    var pt = timeoutsShape;\n    if (!props.addEndListener) pt = pt.isRequired;\n\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    return pt.apply(void 0, [props].concat(args));\n  },\n\n  /**\n   * Add a custom transition end trigger. Called with the transitioning\n   * DOM node and a `done` callback. Allows for more fine grained transition end\n   * logic. Timeouts are still used as a fallback if provided.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * ```jsx\n   * addEndListener={(node, done) => {\n   *   // use the css transitionend event to mark the finish of a transition\n   *   node.addEventListener('transitionend', done, false);\n   * }}\n   * ```\n   */\n  addEndListener: PropTypes.func,\n\n  /**\n   * Callback fired before the \"entering\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool) -> void\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * Callback fired after the \"entering\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * Callback fired after the \"entered\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool) -> void\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * Callback fired before the \"exiting\" status is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * Callback fired after the \"exiting\" status is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * Callback fired after the \"exited\" status is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExited: PropTypes.func\n} : {}; // Name the function so it is clearer in the documentation\n\nfunction noop() {}\n\nTransition.defaultProps = {\n  in: false,\n  mountOnEnter: false,\n  unmountOnExit: false,\n  appear: false,\n  enter: true,\n  exit: true,\n  onEnter: noop,\n  onEntering: noop,\n  onEntered: noop,\n  onExit: noop,\n  onExiting: noop,\n  onExited: noop\n};\nTransition.UNMOUNTED = UNMOUNTED;\nTransition.EXITED = EXITED;\nTransition.ENTERING = ENTERING;\nTransition.ENTERED = ENTERED;\nTransition.EXITING = EXITING;\nexport default Transition;","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  setPrototypeOf(subClass, superClass);\n}","import { useMemo } from 'react';\nconst toFnRef = ref => !ref || typeof ref === 'function' ? ref : value => {\n  ref.current = value;\n};\nexport function mergeRefs(refA, refB) {\n  const a = toFnRef(refA);\n  const b = toFnRef(refB);\n  return value => {\n    if (a) a(value);\n    if (b) b(value);\n  };\n}\n\n/**\n * Create and returns a single callback ref composed from two other Refs.\n *\n * ```tsx\n * const Button = React.forwardRef((props, ref) => {\n *   const [element, attachRef] = useCallbackRef<HTMLButtonElement>();\n *   const mergedRef = useMergedRefs(ref, attachRef);\n *\n *   return <button ref={mergedRef} {...props}/>\n * })\n * ```\n *\n * @param refA A Callback or mutable Ref\n * @param refB A Callback or mutable Ref\n * @category refs\n */\nfunction useMergedRefs(refA, refB) {\n  return useMemo(() => mergeRefs(refA, refB), [refA, refB]);\n}\nexport default useMergedRefs;","\"use client\";\n\nimport React, { useCallback, useRef } from 'react';\nimport Transition from 'react-transition-group/Transition';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport safeFindDOMNode from './safeFindDOMNode';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n// Normalizes Transition callbacks when nodeRef is used.\nconst TransitionWrapper = /*#__PURE__*/React.forwardRef(({\n  onEnter,\n  onEntering,\n  onEntered,\n  onExit,\n  onExiting,\n  onExited,\n  addEndListener,\n  children,\n  childRef,\n  ...props\n}, ref) => {\n  const nodeRef = useRef(null);\n  const mergedRef = useMergedRefs(nodeRef, childRef);\n  const attachRef = r => {\n    mergedRef(safeFindDOMNode(r));\n  };\n  const normalize = callback => param => {\n    if (callback && nodeRef.current) {\n      callback(nodeRef.current, param);\n    }\n  };\n\n  /* eslint-disable react-hooks/exhaustive-deps */\n  const handleEnter = useCallback(normalize(onEnter), [onEnter]);\n  const handleEntering = useCallback(normalize(onEntering), [onEntering]);\n  const handleEntered = useCallback(normalize(onEntered), [onEntered]);\n  const handleExit = useCallback(normalize(onExit), [onExit]);\n  const handleExiting = useCallback(normalize(onExiting), [onExiting]);\n  const handleExited = useCallback(normalize(onExited), [onExited]);\n  const handleAddEndListener = useCallback(normalize(addEndListener), [addEndListener]);\n  /* eslint-enable react-hooks/exhaustive-deps */\n\n  return /*#__PURE__*/_jsx(Transition, {\n    ref: ref,\n    ...props,\n    onEnter: handleEnter,\n    onEntered: handleEntered,\n    onEntering: handleEntering,\n    onExit: handleExit,\n    onExited: handleExited,\n    onExiting: handleExiting,\n    addEndListener: handleAddEndListener,\n    nodeRef: nodeRef,\n    children: typeof children === 'function' ? (status, innerProps) =>\n    // TODO: Types for RTG missing innerProps, so need to cast.\n    children(status, {\n      ...innerProps,\n      ref: attachRef\n    }) : /*#__PURE__*/React.cloneElement(children, {\n      ref: attachRef\n    })\n  });\n});\nexport default TransitionWrapper;","import ReactDOM from 'react-dom';\nexport default function safeFindDOMNode(componentOrElement) {\n  if (componentOrElement && 'setState' in componentOrElement) {\n    return ReactDOM.findDOMNode(componentOrElement);\n  }\n  return componentOrElement != null ? componentOrElement : null;\n}","\"use client\";\n\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport useUpdateEffect from '@restart/hooks/useUpdateEffect';\nimport useCommittedRef from '@restart/hooks/useCommittedRef';\nimport useTimeout from '@restart/hooks/useTimeout';\nimport Anchor from '@restart/ui/Anchor';\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useCallback, useEffect, useImperativeHandle, useMemo, useRef, useState } from 'react';\nimport { useUncontrolled } from 'uncontrollable';\nimport CarouselCaption from './CarouselCaption';\nimport CarouselItem from './CarouselItem';\nimport { map, forEach } from './ElementChildren';\nimport { useBootstrapPrefix, useIsRTL } from './ThemeProvider';\nimport transitionEndListener from './transitionEndListener';\nimport triggerBrowserReflow from './triggerBrowserReflow';\nimport TransitionWrapper from './TransitionWrapper';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nconst SWIPE_THRESHOLD = 40;\nfunction isVisible(element) {\n  if (!element || !element.style || !element.parentNode || !element.parentNode.style) {\n    return false;\n  }\n  const elementStyle = getComputedStyle(element);\n  return elementStyle.display !== 'none' && elementStyle.visibility !== 'hidden' && getComputedStyle(element.parentNode).display !== 'none';\n}\nconst Carousel = /*#__PURE__*/React.forwardRef(({\n  defaultActiveIndex = 0,\n  ...uncontrolledProps\n}, ref) => {\n  const {\n    // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n    as: Component = 'div',\n    bsPrefix,\n    slide = true,\n    fade = false,\n    controls = true,\n    indicators = true,\n    indicatorLabels = [],\n    activeIndex,\n    onSelect,\n    onSlide,\n    onSlid,\n    interval = 5000,\n    keyboard = true,\n    onKeyDown,\n    pause = 'hover',\n    onMouseOver,\n    onMouseOut,\n    wrap = true,\n    touch = true,\n    onTouchStart,\n    onTouchMove,\n    onTouchEnd,\n    prevIcon = /*#__PURE__*/_jsx(\"span\", {\n      \"aria-hidden\": \"true\",\n      className: \"carousel-control-prev-icon\"\n    }),\n    prevLabel = 'Previous',\n    nextIcon = /*#__PURE__*/_jsx(\"span\", {\n      \"aria-hidden\": \"true\",\n      className: \"carousel-control-next-icon\"\n    }),\n    nextLabel = 'Next',\n    variant,\n    className,\n    children,\n    ...props\n  } = useUncontrolled({\n    defaultActiveIndex,\n    ...uncontrolledProps\n  }, {\n    activeIndex: 'onSelect'\n  });\n  const prefix = useBootstrapPrefix(bsPrefix, 'carousel');\n  const isRTL = useIsRTL();\n  const nextDirectionRef = useRef(null);\n  const [direction, setDirection] = useState('next');\n  const [paused, setPaused] = useState(false);\n  const [isSliding, setIsSliding] = useState(false);\n  const [renderedActiveIndex, setRenderedActiveIndex] = useState(activeIndex || 0);\n  useEffect(() => {\n    if (!isSliding && activeIndex !== renderedActiveIndex) {\n      if (nextDirectionRef.current) {\n        setDirection(nextDirectionRef.current);\n      } else {\n        setDirection((activeIndex || 0) > renderedActiveIndex ? 'next' : 'prev');\n      }\n      if (slide) {\n        setIsSliding(true);\n      }\n      setRenderedActiveIndex(activeIndex || 0);\n    }\n  }, [activeIndex, isSliding, renderedActiveIndex, slide]);\n  useEffect(() => {\n    if (nextDirectionRef.current) {\n      nextDirectionRef.current = null;\n    }\n  });\n  let numChildren = 0;\n  let activeChildInterval;\n\n  // Iterate to grab all of the children's interval values\n  // (and count them, too)\n  forEach(children, (child, index) => {\n    ++numChildren;\n    if (index === activeIndex) {\n      activeChildInterval = child.props.interval;\n    }\n  });\n  const activeChildIntervalRef = useCommittedRef(activeChildInterval);\n  const prev = useCallback(event => {\n    if (isSliding) {\n      return;\n    }\n    let nextActiveIndex = renderedActiveIndex - 1;\n    if (nextActiveIndex < 0) {\n      if (!wrap) {\n        return;\n      }\n      nextActiveIndex = numChildren - 1;\n    }\n    nextDirectionRef.current = 'prev';\n    onSelect == null ? void 0 : onSelect(nextActiveIndex, event);\n  }, [isSliding, renderedActiveIndex, onSelect, wrap, numChildren]);\n\n  // This is used in the setInterval, so it should not invalidate.\n  const next = useEventCallback(event => {\n    if (isSliding) {\n      return;\n    }\n    let nextActiveIndex = renderedActiveIndex + 1;\n    if (nextActiveIndex >= numChildren) {\n      if (!wrap) {\n        return;\n      }\n      nextActiveIndex = 0;\n    }\n    nextDirectionRef.current = 'next';\n    onSelect == null ? void 0 : onSelect(nextActiveIndex, event);\n  });\n  const elementRef = useRef();\n  useImperativeHandle(ref, () => ({\n    element: elementRef.current,\n    prev,\n    next\n  }));\n\n  // This is used in the setInterval, so it should not invalidate.\n  const nextWhenVisible = useEventCallback(() => {\n    if (!document.hidden && isVisible(elementRef.current)) {\n      if (isRTL) {\n        prev();\n      } else {\n        next();\n      }\n    }\n  });\n  const slideDirection = direction === 'next' ? 'start' : 'end';\n  useUpdateEffect(() => {\n    if (slide) {\n      // These callbacks will be handled by the <Transition> callbacks.\n      return;\n    }\n    onSlide == null ? void 0 : onSlide(renderedActiveIndex, slideDirection);\n    onSlid == null ? void 0 : onSlid(renderedActiveIndex, slideDirection);\n  }, [renderedActiveIndex]);\n  const orderClassName = `${prefix}-item-${direction}`;\n  const directionalClassName = `${prefix}-item-${slideDirection}`;\n  const handleEnter = useCallback(node => {\n    triggerBrowserReflow(node);\n    onSlide == null ? void 0 : onSlide(renderedActiveIndex, slideDirection);\n  }, [onSlide, renderedActiveIndex, slideDirection]);\n  const handleEntered = useCallback(() => {\n    setIsSliding(false);\n    onSlid == null ? void 0 : onSlid(renderedActiveIndex, slideDirection);\n  }, [onSlid, renderedActiveIndex, slideDirection]);\n  const handleKeyDown = useCallback(event => {\n    if (keyboard && !/input|textarea/i.test(event.target.tagName)) {\n      switch (event.key) {\n        case 'ArrowLeft':\n          event.preventDefault();\n          if (isRTL) {\n            next(event);\n          } else {\n            prev(event);\n          }\n          return;\n        case 'ArrowRight':\n          event.preventDefault();\n          if (isRTL) {\n            prev(event);\n          } else {\n            next(event);\n          }\n          return;\n        default:\n      }\n    }\n    onKeyDown == null ? void 0 : onKeyDown(event);\n  }, [keyboard, onKeyDown, prev, next, isRTL]);\n  const handleMouseOver = useCallback(event => {\n    if (pause === 'hover') {\n      setPaused(true);\n    }\n    onMouseOver == null ? void 0 : onMouseOver(event);\n  }, [pause, onMouseOver]);\n  const handleMouseOut = useCallback(event => {\n    setPaused(false);\n    onMouseOut == null ? void 0 : onMouseOut(event);\n  }, [onMouseOut]);\n  const touchStartXRef = useRef(0);\n  const touchDeltaXRef = useRef(0);\n  const touchUnpauseTimeout = useTimeout();\n  const handleTouchStart = useCallback(event => {\n    touchStartXRef.current = event.touches[0].clientX;\n    touchDeltaXRef.current = 0;\n    if (pause === 'hover') {\n      setPaused(true);\n    }\n    onTouchStart == null ? void 0 : onTouchStart(event);\n  }, [pause, onTouchStart]);\n  const handleTouchMove = useCallback(event => {\n    if (event.touches && event.touches.length > 1) {\n      touchDeltaXRef.current = 0;\n    } else {\n      touchDeltaXRef.current = event.touches[0].clientX - touchStartXRef.current;\n    }\n    onTouchMove == null ? void 0 : onTouchMove(event);\n  }, [onTouchMove]);\n  const handleTouchEnd = useCallback(event => {\n    if (touch) {\n      const touchDeltaX = touchDeltaXRef.current;\n      if (Math.abs(touchDeltaX) > SWIPE_THRESHOLD) {\n        if (touchDeltaX > 0) {\n          prev(event);\n        } else {\n          next(event);\n        }\n      }\n    }\n    if (pause === 'hover') {\n      touchUnpauseTimeout.set(() => {\n        setPaused(false);\n      }, interval || undefined);\n    }\n    onTouchEnd == null ? void 0 : onTouchEnd(event);\n  }, [touch, pause, prev, next, touchUnpauseTimeout, interval, onTouchEnd]);\n  const shouldPlay = interval != null && !paused && !isSliding;\n  const intervalHandleRef = useRef();\n  useEffect(() => {\n    var _ref, _activeChildIntervalR;\n    if (!shouldPlay) {\n      return undefined;\n    }\n    const nextFunc = isRTL ? prev : next;\n    intervalHandleRef.current = window.setInterval(document.visibilityState ? nextWhenVisible : nextFunc, (_ref = (_activeChildIntervalR = activeChildIntervalRef.current) != null ? _activeChildIntervalR : interval) != null ? _ref : undefined);\n    return () => {\n      if (intervalHandleRef.current !== null) {\n        clearInterval(intervalHandleRef.current);\n      }\n    };\n  }, [shouldPlay, prev, next, activeChildIntervalRef, interval, nextWhenVisible, isRTL]);\n  const indicatorOnClicks = useMemo(() => indicators && Array.from({\n    length: numChildren\n  }, (_, index) => event => {\n    onSelect == null ? void 0 : onSelect(index, event);\n  }), [indicators, numChildren, onSelect]);\n  return /*#__PURE__*/_jsxs(Component, {\n    ref: elementRef,\n    ...props,\n    onKeyDown: handleKeyDown,\n    onMouseOver: handleMouseOver,\n    onMouseOut: handleMouseOut,\n    onTouchStart: handleTouchStart,\n    onTouchMove: handleTouchMove,\n    onTouchEnd: handleTouchEnd,\n    className: classNames(className, prefix, slide && 'slide', fade && `${prefix}-fade`, variant && `${prefix}-${variant}`),\n    children: [indicators && /*#__PURE__*/_jsx(\"div\", {\n      className: `${prefix}-indicators`,\n      children: map(children, (_, index) => /*#__PURE__*/_jsx(\"button\", {\n        type: \"button\",\n        \"data-bs-target\": \"\" // Bootstrap requires this in their css.\n        ,\n        \"aria-label\": indicatorLabels != null && indicatorLabels.length ? indicatorLabels[index] : `Slide ${index + 1}`,\n        className: index === renderedActiveIndex ? 'active' : undefined,\n        onClick: indicatorOnClicks ? indicatorOnClicks[index] : undefined,\n        \"aria-current\": index === renderedActiveIndex\n      }, index))\n    }), /*#__PURE__*/_jsx(\"div\", {\n      className: `${prefix}-inner`,\n      children: map(children, (child, index) => {\n        const isActive = index === renderedActiveIndex;\n        return slide ? /*#__PURE__*/_jsx(TransitionWrapper, {\n          in: isActive,\n          onEnter: isActive ? handleEnter : undefined,\n          onEntered: isActive ? handleEntered : undefined,\n          addEndListener: transitionEndListener,\n          children: (status, innerProps) => /*#__PURE__*/React.cloneElement(child, {\n            ...innerProps,\n            className: classNames(child.props.className, isActive && status !== 'entered' && orderClassName, (status === 'entered' || status === 'exiting') && 'active', (status === 'entering' || status === 'exiting') && directionalClassName)\n          })\n        }) : ( /*#__PURE__*/React.cloneElement(child, {\n          className: classNames(child.props.className, isActive && 'active')\n        }));\n      })\n    }), controls && /*#__PURE__*/_jsxs(_Fragment, {\n      children: [(wrap || activeIndex !== 0) && /*#__PURE__*/_jsxs(Anchor, {\n        className: `${prefix}-control-prev`,\n        onClick: prev,\n        children: [prevIcon, prevLabel && /*#__PURE__*/_jsx(\"span\", {\n          className: \"visually-hidden\",\n          children: prevLabel\n        })]\n      }), (wrap || activeIndex !== numChildren - 1) && /*#__PURE__*/_jsxs(Anchor, {\n        className: `${prefix}-control-next`,\n        onClick: next,\n        children: [nextIcon, nextLabel && /*#__PURE__*/_jsx(\"span\", {\n          className: \"visually-hidden\",\n          children: nextLabel\n        })]\n      })]\n    })]\n  });\n});\nCarousel.displayName = 'Carousel';\nexport default Object.assign(Carousel, {\n  Caption: CarouselCaption,\n  Item: CarouselItem\n});","// reading a dimension prop will cause the browser to recalculate,\n// which will let our animations work\nexport default function triggerBrowserReflow(node) {\n  // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n  node.offsetHeight;\n}","\"use client\";\n\nimport * as React from 'react';\nimport { useContext, useMemo } from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const DEFAULT_BREAKPOINTS = ['xxl', 'xl', 'lg', 'md', 'sm', 'xs'];\nexport const DEFAULT_MIN_BREAKPOINT = 'xs';\nconst ThemeContext = /*#__PURE__*/React.createContext({\n  prefixes: {},\n  breakpoints: DEFAULT_BREAKPOINTS,\n  minBreakpoint: DEFAULT_MIN_BREAKPOINT\n});\nconst {\n  Consumer,\n  Provider\n} = ThemeContext;\nfunction ThemeProvider({\n  prefixes = {},\n  breakpoints = DEFAULT_BREAKPOINTS,\n  minBreakpoint = DEFAULT_MIN_BREAKPOINT,\n  dir,\n  children\n}) {\n  const contextValue = useMemo(() => ({\n    prefixes: {\n      ...prefixes\n    },\n    breakpoints,\n    minBreakpoint,\n    dir\n  }), [prefixes, breakpoints, minBreakpoint, dir]);\n  return /*#__PURE__*/_jsx(Provider, {\n    value: contextValue,\n    children: children\n  });\n}\nexport function useBootstrapPrefix(prefix, defaultPrefix) {\n  const {\n    prefixes\n  } = useContext(ThemeContext);\n  return prefix || prefixes[defaultPrefix] || defaultPrefix;\n}\nexport function useBootstrapBreakpoints() {\n  const {\n    breakpoints\n  } = useContext(ThemeContext);\n  return breakpoints;\n}\nexport function useBootstrapMinBreakpoint() {\n  const {\n    minBreakpoint\n  } = useContext(ThemeContext);\n  return minBreakpoint;\n}\nexport function useIsRTL() {\n  const {\n    dir\n  } = useContext(ThemeContext);\n  return dir === 'rtl';\n}\nfunction createBootstrapComponent(Component, opts) {\n  if (typeof opts === 'string') opts = {\n    prefix: opts\n  };\n  const isClassy = Component.prototype && Component.prototype.isReactComponent;\n  // If it's a functional component make sure we don't break it with a ref\n  const {\n    prefix,\n    forwardRefAs = isClassy ? 'ref' : 'innerRef'\n  } = opts;\n  const Wrapped = /*#__PURE__*/React.forwardRef(({\n    ...props\n  }, ref) => {\n    props[forwardRefAs] = ref;\n    const bsPrefix = useBootstrapPrefix(props.bsPrefix, prefix);\n    return /*#__PURE__*/_jsx(Component, {\n      ...props,\n      bsPrefix: bsPrefix\n    });\n  });\n  Wrapped.displayName = `Bootstrap(${Component.displayName || Component.name})`;\n  return Wrapped;\n}\nexport { createBootstrapComponent, Consumer as ThemeConsumer };\nexport default ThemeProvider;","/*!\n\tCopyright (c) 2018 Jed Watson.\n\tLicensed under the MIT License (MIT), see\n\thttp://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames () {\n\t\tvar classes = '';\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (arg) {\n\t\t\t\tclasses = appendClass(classes, parseValue(arg));\n\t\t\t}\n\t\t}\n\n\t\treturn classes;\n\t}\n\n\tfunction parseValue (arg) {\n\t\tif (typeof arg === 'string' || typeof arg === 'number') {\n\t\t\treturn arg;\n\t\t}\n\n\t\tif (typeof arg !== 'object') {\n\t\t\treturn '';\n\t\t}\n\n\t\tif (Array.isArray(arg)) {\n\t\t\treturn classNames.apply(null, arg);\n\t\t}\n\n\t\tif (arg.toString !== Object.prototype.toString && !arg.toString.toString().includes('[native code]')) {\n\t\t\treturn arg.toString();\n\t\t}\n\n\t\tvar classes = '';\n\n\t\tfor (var key in arg) {\n\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\tclasses = appendClass(classes, key);\n\t\t\t}\n\t\t}\n\n\t\treturn classes;\n\t}\n\n\tfunction appendClass (value, newClass) {\n\t\tif (!newClass) {\n\t\t\treturn value;\n\t\t}\n\t\n\t\tif (value) {\n\t\t\treturn value + ' ' + newClass;\n\t\t}\n\t\n\t\treturn value + newClass;\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","import { useRef } from 'react';\nimport { useIsomorphicLayoutEffect } from './use-isomorphic-effect.mjs';\n\nfunction useIsMounted() {\n    const isMounted = useRef(false);\n    useIsomorphicLayoutEffect(() => {\n        isMounted.current = true;\n        return () => {\n            isMounted.current = false;\n        };\n    }, []);\n    return isMounted;\n}\n\nexport { useIsMounted };\n","import * as React from 'react';\nimport { useId, useRef, useInsertionEffect } from 'react';\n\n/**\n * Measurement functionality has to be within a separate component\n * to leverage snapshot lifecycle.\n */\nclass PopChildMeasure extends React.Component {\n    getSnapshotBeforeUpdate(prevProps) {\n        const element = this.props.childRef.current;\n        if (element && prevProps.isPresent && !this.props.isPresent) {\n            const size = this.props.sizeRef.current;\n            size.height = element.offsetHeight || 0;\n            size.width = element.offsetWidth || 0;\n            size.top = element.offsetTop;\n            size.left = element.offsetLeft;\n        }\n        return null;\n    }\n    /**\n     * Required with getSnapshotBeforeUpdate to stop React complaining.\n     */\n    componentDidUpdate() { }\n    render() {\n        return this.props.children;\n    }\n}\nfunction PopChild({ children, isPresent }) {\n    const id = useId();\n    const ref = useRef(null);\n    const size = useRef({\n        width: 0,\n        height: 0,\n        top: 0,\n        left: 0,\n    });\n    /**\n     * We create and inject a style block so we can apply this explicit\n     * sizing in a non-destructive manner by just deleting the style block.\n     *\n     * We can't apply size via render as the measurement happens\n     * in getSnapshotBeforeUpdate (post-render), likewise if we apply the\n     * styles directly on the DOM node, we might be overwriting\n     * styles set via the style prop.\n     */\n    useInsertionEffect(() => {\n        const { width, height, top, left } = size.current;\n        if (isPresent || !ref.current || !width || !height)\n            return;\n        ref.current.dataset.motionPopId = id;\n        const style = document.createElement(\"style\");\n        document.head.appendChild(style);\n        if (style.sheet) {\n            style.sheet.insertRule(`\n          [data-motion-pop-id=\"${id}\"] {\n            position: absolute !important;\n            width: ${width}px !important;\n            height: ${height}px !important;\n            top: ${top}px !important;\n            left: ${left}px !important;\n          }\n        `);\n        }\n        return () => {\n            document.head.removeChild(style);\n        };\n    }, [isPresent]);\n    return (React.createElement(PopChildMeasure, { isPresent: isPresent, childRef: ref, sizeRef: size }, React.cloneElement(children, { ref })));\n}\n\nexport { PopChild };\n","import * as React from 'react';\nimport { useId, useMemo } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { PopChild } from './PopChild.mjs';\n\nconst PresenceChild = ({ children, initial, isPresent, onExitComplete, custom, presenceAffectsLayout, mode, }) => {\n    const presenceChildren = useConstant(newChildrenMap);\n    const id = useId();\n    const context = useMemo(() => ({\n        id,\n        initial,\n        isPresent,\n        custom,\n        onExitComplete: (childId) => {\n            presenceChildren.set(childId, true);\n            for (const isComplete of presenceChildren.values()) {\n                if (!isComplete)\n                    return; // can stop searching when any is incomplete\n            }\n            onExitComplete && onExitComplete();\n        },\n        register: (childId) => {\n            presenceChildren.set(childId, false);\n            return () => presenceChildren.delete(childId);\n        },\n    }), \n    /**\n     * If the presence of a child affects the layout of the components around it,\n     * we want to make a new context value to ensure they get re-rendered\n     * so they can detect that layout change.\n     */\n    presenceAffectsLayout ? undefined : [isPresent]);\n    useMemo(() => {\n        presenceChildren.forEach((_, key) => presenceChildren.set(key, false));\n    }, [isPresent]);\n    /**\n     * If there's no `motion` components to fire exit animations, we want to remove this\n     * component immediately.\n     */\n    React.useEffect(() => {\n        !isPresent &&\n            !presenceChildren.size &&\n            onExitComplete &&\n            onExitComplete();\n    }, [isPresent]);\n    if (mode === \"popLayout\") {\n        children = React.createElement(PopChild, { isPresent: isPresent }, children);\n    }\n    return (React.createElement(PresenceContext.Provider, { value: context }, children));\n};\nfunction newChildrenMap() {\n    return new Map();\n}\n\nexport { PresenceChild };\n","import * as React from 'react';\nimport { useContext, useRef, cloneElement, Children, isValidElement } from 'react';\nimport { useForceUpdate } from '../../utils/use-force-update.mjs';\nimport { useIsMounted } from '../../utils/use-is-mounted.mjs';\nimport { PresenceChild } from './PresenceChild.mjs';\nimport { LayoutGroupContext } from '../../context/LayoutGroupContext.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { useUnmountEffect } from '../../utils/use-unmount-effect.mjs';\nimport { invariant } from '../../utils/errors.mjs';\n\nconst getChildKey = (child) => child.key || \"\";\nfunction updateChildLookup(children, allChildren) {\n    children.forEach((child) => {\n        const key = getChildKey(child);\n        allChildren.set(key, child);\n    });\n}\nfunction onlyElements(children) {\n    const filtered = [];\n    // We use forEach here instead of map as map mutates the component key by preprending `.$`\n    Children.forEach(children, (child) => {\n        if (isValidElement(child))\n            filtered.push(child);\n    });\n    return filtered;\n}\n/**\n * `AnimatePresence` enables the animation of components that have been removed from the tree.\n *\n * When adding/removing more than a single child, every child **must** be given a unique `key` prop.\n *\n * Any `motion` components that have an `exit` property defined will animate out when removed from\n * the tree.\n *\n * ```jsx\n * import { motion, AnimatePresence } from 'framer-motion'\n *\n * export const Items = ({ items }) => (\n *   <AnimatePresence>\n *     {items.map(item => (\n *       <motion.div\n *         key={item.id}\n *         initial={{ opacity: 0 }}\n *         animate={{ opacity: 1 }}\n *         exit={{ opacity: 0 }}\n *       />\n *     ))}\n *   </AnimatePresence>\n * )\n * ```\n *\n * You can sequence exit animations throughout a tree using variants.\n *\n * If a child contains multiple `motion` components with `exit` props, it will only unmount the child\n * once all `motion` components have finished animating out. Likewise, any components using\n * `usePresence` all need to call `safeToRemove`.\n *\n * @public\n */\nconst AnimatePresence = ({ children, custom, initial = true, onExitComplete, exitBeforeEnter, presenceAffectsLayout = true, mode = \"sync\", }) => {\n    invariant(!exitBeforeEnter, \"Replace exitBeforeEnter with mode='wait'\");\n    // We want to force a re-render once all exiting animations have finished. We\n    // either use a local forceRender function, or one from a parent context if it exists.\n    const forceRender = useContext(LayoutGroupContext).forceRender || useForceUpdate()[0];\n    const isMounted = useIsMounted();\n    // Filter out any children that aren't ReactElements. We can only track ReactElements with a props.key\n    const filteredChildren = onlyElements(children);\n    let childrenToRender = filteredChildren;\n    const exitingChildren = useRef(new Map()).current;\n    // Keep a living record of the children we're actually rendering so we\n    // can diff to figure out which are entering and exiting\n    const presentChildren = useRef(childrenToRender);\n    // A lookup table to quickly reference components by key\n    const allChildren = useRef(new Map()).current;\n    // If this is the initial component render, just deal with logic surrounding whether\n    // we play onMount animations or not.\n    const isInitialRender = useRef(true);\n    useIsomorphicLayoutEffect(() => {\n        isInitialRender.current = false;\n        updateChildLookup(filteredChildren, allChildren);\n        presentChildren.current = childrenToRender;\n    });\n    useUnmountEffect(() => {\n        isInitialRender.current = true;\n        allChildren.clear();\n        exitingChildren.clear();\n    });\n    if (isInitialRender.current) {\n        return (React.createElement(React.Fragment, null, childrenToRender.map((child) => (React.createElement(PresenceChild, { key: getChildKey(child), isPresent: true, initial: initial ? undefined : false, presenceAffectsLayout: presenceAffectsLayout, mode: mode }, child)))));\n    }\n    // If this is a subsequent render, deal with entering and exiting children\n    childrenToRender = [...childrenToRender];\n    // Diff the keys of the currently-present and target children to update our\n    // exiting list.\n    const presentKeys = presentChildren.current.map(getChildKey);\n    const targetKeys = filteredChildren.map(getChildKey);\n    // Diff the present children with our target children and mark those that are exiting\n    const numPresent = presentKeys.length;\n    for (let i = 0; i < numPresent; i++) {\n        const key = presentKeys[i];\n        if (targetKeys.indexOf(key) === -1 && !exitingChildren.has(key)) {\n            exitingChildren.set(key, undefined);\n        }\n    }\n    // If we currently have exiting children, and we're deferring rendering incoming children\n    // until after all current children have exiting, empty the childrenToRender array\n    if (mode === \"wait\" && exitingChildren.size) {\n        childrenToRender = [];\n    }\n    // Loop through all currently exiting components and clone them to overwrite `animate`\n    // with any `exit` prop they might have defined.\n    exitingChildren.forEach((component, key) => {\n        // If this component is actually entering again, early return\n        if (targetKeys.indexOf(key) !== -1)\n            return;\n        const child = allChildren.get(key);\n        if (!child)\n            return;\n        const insertionIndex = presentKeys.indexOf(key);\n        let exitingComponent = component;\n        if (!exitingComponent) {\n            const onExit = () => {\n                // clean up the exiting children map\n                exitingChildren.delete(key);\n                // compute the keys of children that were rendered once but are no longer present\n                // this could happen in case of too many fast consequent renderings\n                // @link https://github.com/framer/motion/issues/2023\n                const leftOverKeys = Array.from(allChildren.keys()).filter((childKey) => !targetKeys.includes(childKey));\n                // clean up the all children map\n                leftOverKeys.forEach((leftOverKey) => allChildren.delete(leftOverKey));\n                // make sure to render only the children that are actually visible\n                presentChildren.current = filteredChildren.filter((presentChild) => {\n                    const presentChildKey = getChildKey(presentChild);\n                    return (\n                    // filter out the node exiting\n                    presentChildKey === key ||\n                        // filter out the leftover children\n                        leftOverKeys.includes(presentChildKey));\n                });\n                // Defer re-rendering until all exiting children have indeed left\n                if (!exitingChildren.size) {\n                    if (isMounted.current === false)\n                        return;\n                    forceRender();\n                    onExitComplete && onExitComplete();\n                }\n            };\n            exitingComponent = (React.createElement(PresenceChild, { key: getChildKey(child), isPresent: false, onExitComplete: onExit, custom: custom, presenceAffectsLayout: presenceAffectsLayout, mode: mode }, child));\n            exitingChildren.set(key, exitingComponent);\n        }\n        childrenToRender.splice(insertionIndex, 0, exitingComponent);\n    });\n    // Add `MotionContext` even to children that don't need it to ensure we're rendering\n    // the same tree between renders\n    childrenToRender = childrenToRender.map((child) => {\n        const key = child.key;\n        return exitingChildren.has(key) ? (child) : (React.createElement(PresenceChild, { key: getChildKey(child), isPresent: true, presenceAffectsLayout: presenceAffectsLayout, mode: mode }, child));\n    });\n    if (process.env.NODE_ENV !== \"production\" &&\n        mode === \"wait\" &&\n        childrenToRender.length > 1) {\n        console.warn(`You're attempting to animate multiple children within AnimatePresence, but its mode is set to \"wait\". This will lead to odd visual behaviour.`);\n    }\n    return (React.createElement(React.Fragment, null, exitingChildren.size\n        ? childrenToRender\n        : childrenToRender.map((child) => cloneElement(child))));\n};\n\nexport { AnimatePresence };\n","import { useState, useCallback } from 'react';\nimport { useIsMounted } from './use-is-mounted.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction useForceUpdate() {\n    const isMounted = useIsMounted();\n    const [forcedRenderCount, setForcedRenderCount] = useState(0);\n    const forceRender = useCallback(() => {\n        isMounted.current && setForcedRenderCount(forcedRenderCount + 1);\n    }, [forcedRenderCount]);\n    /**\n     * Defer this to the end of the next animation frame in case there are multiple\n     * synchronous calls.\n     */\n    const deferredForceRender = useCallback(() => frame.postRender(forceRender), [forceRender]);\n    return [deferredForceRender, forcedRenderCount];\n}\n\nexport { useForceUpdate };\n","import { useEffect } from 'react';\n\nfunction useUnmountEffect(callback) {\n    return useEffect(() => () => callback(), []);\n}\n\nexport { useUnmountEffect };\n","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","class Queue {\n    constructor() {\n        this.order = [];\n        this.scheduled = new Set();\n    }\n    add(process) {\n        if (!this.scheduled.has(process)) {\n            this.scheduled.add(process);\n            this.order.push(process);\n            return true;\n        }\n    }\n    remove(process) {\n        const index = this.order.indexOf(process);\n        if (index !== -1) {\n            this.order.splice(index, 1);\n            this.scheduled.delete(process);\n        }\n    }\n    clear() {\n        this.order.length = 0;\n        this.scheduled.clear();\n    }\n}\nfunction createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Queue();\n    let nextFrame = new Queue();\n    let numToRun = 0;\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (queue.add(callback) && addToCurrentFrame && isProcessing) {\n                // If we're adding it to the currently running queue, update its measured size\n                numToRun = thisFrame.order.length;\n            }\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.remove(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Clear the next frame queue\n            nextFrame.clear();\n            // Execute this frame\n            numToRun = thisFrame.order.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = thisFrame.order[i];\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                    callback(frameData);\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { createRenderStep } from './render-step.mjs';\n\nconst stepsOrder = [\n    \"prepare\",\n    \"read\",\n    \"update\",\n    \"preRender\",\n    \"render\",\n    \"postRender\",\n];\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0,\n        timestamp: 0,\n        isProcessing: false,\n    };\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(() => (runNextFrame = true));\n        return acc;\n    }, {});\n    const processStep = (stepId) => {\n        steps[stepId].process(state);\n    };\n    const processBatch = () => {\n        const timestamp = MotionGlobalConfig.useManualTiming\n            ? state.timestamp\n            : performance.now();\n        runNextFrame = false;\n        state.delta = useDefaultElapsed\n            ? 1000 / 60\n            : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        stepsOrder.forEach(processStep);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => stepsOrder.forEach((key) => steps[key].cancel(process));\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher, stepsOrder };\n","import { noop } from '../utils/noop.mjs';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps, } = createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, steps };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","import { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: microtask, cancel: cancelMicrotask } = createRenderBatcher(queueMicrotask, false);\n\nexport { cancelMicrotask, microtask };\n","function isRefObject(ref) {\n    return (ref &&\n        typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return (v !== null &&\n        typeof v === \"object\" &&\n        typeof v.start === \"function\");\n}\n\nexport { isAnimationControls };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            const isStrict = useContext(LazyContext).strict;\n            if (context.visualElement) {\n                MeasureLayout = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, isStrict, preloadedFeatures, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(MotionContext.Provider, { value: context },\n            MeasureLayout && context.visualElement ? (React.createElement(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null,\n            useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const wantsHandoff = useRef(Boolean(props[optimizedAppearDataAttribute] && !window.HandoffComplete));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        microtask.postRender(visualElement.render);\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        visualElement.updateFeatures();\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        if (wantsHandoff.current) {\n            wantsHandoff.current = false;\n            // This ensures all future calls to animateChanges() will run in useEffect\n            window.HandoffComplete = true;\n        }\n    });\n    return visualElement;\n}\n\nexport { useVisualElement };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(transform, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        if (transform[key] !== undefined) {\n            const transformName = translateAlias[key] || key;\n            transformString += `${transformName}(${transform[key]}) `;\n        }\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = checkStringStartsWith(\"--\");\nconst startsAsVariableToken = checkStringStartsWith(\"var(--\");\nconst isCSSVariableToken = (key) => startsAsVariableToken(key) && singleCssVariableRegex.test(key);\nconst singleCssVariableRegex = /var\\s*\\(\\s*--[\\w-]+(\\s*,\\s*(?:(?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)+)?\\s*\\)$/i;\n\nexport { isCSSVariableName, isCSSVariableToken };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max, v) => {\n    if (v > max)\n        return max;\n    if (v < min)\n        return min;\n    return v;\n};\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /(-)?([\\d]*\\.?[\\d])+/g;\nconst colorRegex = /(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))/gi;\nconst singleColorRegex = /^(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))$/i;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state.transform, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"custom\",\n    \"inherit\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"globalTapTarget\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        key.startsWith(\"onLayout\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { Fragment, useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = Component !== Fragment\n            ? { ...filteredProps, ...visualProps, ref }\n            : {};\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style && isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps);\n    for (const key in props) {\n        if (isMotionValue(props[key]) || isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            frame.read(() => {\n                try {\n                    renderState.dimensions =\n                        typeof instance.getBBox ===\n                            \"function\"\n                            ? instance.getBBox()\n                            : instance.getBoundingClientRect();\n                }\n                catch (e) {\n                    // Most likely trying to measure an unrendered element under Firefox\n                    renderState.dimensions = {\n                        x: 0,\n                        y: 0,\n                        width: 0,\n                        height: 0,\n                    };\n                }\n            });\n            frame.render(() => {\n                buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n                renderSVG(instance, renderState);\n            });\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[pointType + \"X\"],\n            y: event[pointType + \"Y\"],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = \"pointer\" + (isActive ? \"enter\" : \"leave\");\n    const callbackName = \"onHover\" + (isActive ? \"Start\" : \"End\");\n    const handleEvent = (event, info) => {\n        if (event.pointerType === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        if (props[callbackName]) {\n            frame.update(() => props[callbackName](event, info));\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            if (this.isPressing)\n                return;\n            this.removeEndListeners();\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel, globalTapTarget } = this.node.getProps();\n                frame.update(() => {\n                    /**\n                     * We only count this as a tap gesture if the event.target is the same\n                     * as, or a child of, this component's element\n                     */\n                    !globalTapTarget &&\n                        !isNodeOrChild(this.node.current, endEvent.target)\n                        ? onTapCancel && onTapCancel(endEvent, endInfo)\n                        : onTap && onTap(endEvent, endInfo);\n                });\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, { passive: !(props.onTap || props[\"onPointerUp\"]) });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), { passive: !(props.onTapCancel || props[\"onPointerCancel\"]) });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap) {\n                            frame.update(() => onTap(event, info));\n                        }\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            frame.update(() => onTapStart(event, info));\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel) {\n            frame.update(() => onTapCancel(event, info));\n        }\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(props.globalTapTarget ? window : this.node.current, \"pointerdown\", this.startPointerPress, { passive: !(props.onTapStart || props[\"onPointerStart\"]) });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean(!easing ||\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return isBezierDefinition(easing)\n        ? cubicBezierAsString(easing)\n        : Array.isArray(easing)\n            ? easing.map(mapEasingToNativeEasing)\n            : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = cubicBezier(0.42, 0, 1, 1);\nconst easeOut = cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mixNumber = (from, to, progress) => {\n    return from + (to - from) * progress;\n};\n\nexport { mixNumber };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { mixNumber } from './number.mjs';\nimport { invariant } from '../errors.mjs';\nimport { hslaToRgba } from '../hsla-to-rgba.mjs';\nimport { hex } from '../../value/types/color/hex.mjs';\nimport { rgba } from '../../value/types/color/rgba.mjs';\nimport { hsla } from '../../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    const expo = v * (to * to - fromExpo) + fromExpo;\n    return expo < 0 ? 0 : Math.sqrt(expo);\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mixNumber(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","import { color } from '../color/index.mjs';\nimport { isString, floatRegex, colorRegex, sanitize } from '../utils.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst NUMBER_TOKEN = \"number\";\nconst COLOR_TOKEN = \"color\";\nconst VAR_TOKEN = \"var\";\nconst VAR_FUNCTION_TOKEN = \"var(\";\nconst SPLIT_TOKEN = \"${}\";\nconst complexRegex = /(var\\s*\\(\\s*--[\\w-]+(\\s*,\\s*(?:(?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)+)?\\s*\\))|(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))|((-)?([\\d]*\\.?[\\d])+)/gi;\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const matchedValues = originalValue.match(complexRegex) || [];\n    const values = [];\n    const indexes = {\n        color: [],\n        number: [],\n        var: [],\n    };\n    const types = [];\n    for (let i = 0; i < matchedValues.length; i++) {\n        const parsedValue = matchedValues[i];\n        if (color.test(parsedValue)) {\n            indexes.color.push(i);\n            types.push(COLOR_TOKEN);\n            values.push(color.parse(parsedValue));\n        }\n        else if (parsedValue.startsWith(VAR_FUNCTION_TOKEN)) {\n            indexes.var.push(i);\n            types.push(VAR_TOKEN);\n            values.push(parsedValue);\n        }\n        else {\n            indexes.number.push(i);\n            types.push(NUMBER_TOKEN);\n            values.push(parseFloat(parsedValue));\n        }\n    }\n    const tokenised = originalValue.replace(complexRegex, SPLIT_TOKEN);\n    const split = tokenised.split(SPLIT_TOKEN);\n    return { values, split, indexes, types };\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { split, types } = analyseComplexValue(source);\n    const numSections = split.length;\n    return (v) => {\n        let output = \"\";\n        for (let i = 0; i < numSections; i++) {\n            output += split[i];\n            if (v[i] !== undefined) {\n                const type = types[i];\n                if (type === NUMBER_TOKEN) {\n                    output += sanitize(v[i]);\n                }\n                else if (type === COLOR_TOKEN) {\n                    output += color.transform(v[i]);\n                }\n                else {\n                    output += v[i];\n                }\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { mixNumber as mixNumber$1 } from './number.mjs';\nimport { mixColor } from './color.mjs';\nimport { pipe } from '../pipe.mjs';\nimport { warning } from '../errors.mjs';\nimport { color } from '../../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../../value/types/complex/index.mjs';\nimport { isCSSVariableToken } from '../../render/dom/utils/is-css-variable.mjs';\n\nfunction mixImmediate(a, b) {\n    return (p) => (p > 0 ? b : a);\n}\nfunction mixNumber(a, b) {\n    return (p) => mixNumber$1(a, b, p);\n}\nfunction getMixer(a) {\n    if (typeof a === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof a === \"string\") {\n        return isCSSVariableToken(a)\n            ? mixImmediate\n            : color.test(a)\n                ? mixColor\n                : mixComplex;\n    }\n    else if (Array.isArray(a)) {\n        return mixArray;\n    }\n    else if (typeof a === \"object\") {\n        return color.test(a) ? mixColor : mixObject;\n    }\n    return mixImmediate;\n}\nfunction mixArray(a, b) {\n    const output = [...a];\n    const numValues = output.length;\n    const blendValue = a.map((v, i) => getMixer(v)(v, b[i]));\n    return (p) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](p);\n        }\n        return output;\n    };\n}\nfunction mixObject(a, b) {\n    const output = { ...a, ...b };\n    const blendValue = {};\n    for (const key in output) {\n        if (a[key] !== undefined && b[key] !== undefined) {\n            blendValue[key] = getMixer(a[key])(a[key], b[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n}\nfunction matchOrder(origin, target) {\n    var _a;\n    const orderedOrigin = [];\n    const pointers = { color: 0, var: 0, number: 0 };\n    for (let i = 0; i < target.values.length; i++) {\n        const type = target.types[i];\n        const originIndex = origin.indexes[type][pointers[type]];\n        const originValue = (_a = origin.values[originIndex]) !== null && _a !== void 0 ? _a : 0;\n        orderedOrigin[i] = originValue;\n        pointers[type]++;\n    }\n    return orderedOrigin;\n}\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.indexes.var.length === targetStats.indexes.var.length &&\n        originStats.indexes.color.length === targetStats.indexes.color.length &&\n        originStats.indexes.number.length >= targetStats.indexes.number.length;\n    if (canInterpolate) {\n        return pipe(mixArray(matchOrder(originStats, targetStats), targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { getMixer, mixArray, mixComplex, mixObject };\n","import { getMixer } from './complex.mjs';\nimport { mixNumber } from './number.mjs';\n\nfunction mix(from, to, p) {\n    if (typeof from === \"number\" &&\n        typeof to === \"number\" &&\n        typeof p === \"number\") {\n        return mixNumber(from, to, p);\n    }\n    const mixer = getMixer(from);\n    return mixer(from, to);\n}\n\nexport { mix };\n","import { invariant } from './errors.mjs';\nimport { clamp } from './clamp.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { noop } from './noop.mjs';\nimport { mix } from './mix/index.mjs';\n\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || mix;\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mixNumber } from '../mix/number.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mixNumber(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    return {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        currentVelocity = calcGeneratorVelocity(resolveSpring, t, current);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n    };\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value),\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t > timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { frameData } from './frame.mjs';\n\nlet now;\nfunction clearTime() {\n    now = undefined;\n}\n/**\n * An eventloop-synchronous alternative to performance.now().\n *\n * Ensures that time measurements remain consistent within a synchronous context.\n * Usually calling performance.now() twice within the same synchronous context\n * will return different values which isn't useful for animations when we're usually\n * trying to sync animations to the same frame.\n */\nconst time = {\n    now: () => {\n        if (now === undefined) {\n            time.set(frameData.isProcessing || MotionGlobalConfig.useManualTiming\n                ? frameData.timestamp\n                : performance.now());\n        }\n        return now;\n    },\n    set: (newTime) => {\n        now = newTime;\n        queueMicrotask(clearTime);\n    },\n};\n\nexport { time };\n","import { time } from '../../../frameloop/sync-time.mjs';\nimport { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => (frameData.isProcessing ? frameData.timestamp : time.now()),\n    };\n};\n\nexport { frameloopDriver };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","import { keyframes } from '../../generators/keyframes.mjs';\nimport { spring } from '../../generators/spring/index.mjs';\nimport { inertia } from '../../generators/inertia.mjs';\nimport { frameloopDriver } from './driver-frameloop.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorDuration } from '../../generators/utils/calc-duration.mjs';\nimport { invariant } from '../../../utils/errors.mjs';\nimport { mix } from '../../../utils/mix/index.mjs';\nimport { pipe } from '../../../utils/pipe.mjs';\n\nconst types = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\nconst percentToProgress = (percent) => percent / 100;\n/**\n * Animate a single value on the main thread.\n *\n * This function is written, where functionality overlaps,\n * to be largely spec-compliant with WAAPI to allow fungibility\n * between the two.\n */\nfunction animateValue({ autoplay = true, delay = 0, driver = frameloopDriver, keyframes: keyframes$1, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", onPlay, onStop, onComplete, onUpdate, ...options }) {\n    let speed = 1;\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Resolve the current Promise every time we enter the\n     * finished state. This is WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let animationDriver;\n    const generatorFactory = types[type] || keyframes;\n    /**\n     * If this isn't the keyframes generator and we've been provided\n     * strings as keyframes, we need to interpolate these.\n     */\n    let mapNumbersToKeyframes;\n    if (generatorFactory !== keyframes &&\n        typeof keyframes$1[0] !== \"number\") {\n        if (process.env.NODE_ENV !== \"production\") {\n            invariant(keyframes$1.length === 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`);\n        }\n        mapNumbersToKeyframes = pipe(percentToProgress, mix(keyframes$1[0], keyframes$1[1]));\n        keyframes$1 = [0, 100];\n    }\n    const generator = generatorFactory({ ...options, keyframes: keyframes$1 });\n    let mirroredGenerator;\n    if (repeatType === \"mirror\") {\n        mirroredGenerator = generatorFactory({\n            ...options,\n            keyframes: [...keyframes$1].reverse(),\n            velocity: -(options.velocity || 0),\n        });\n    }\n    let playState = \"idle\";\n    let holdTime = null;\n    let startTime = null;\n    let cancelTime = null;\n    /**\n     * If duration is undefined and we have repeat options,\n     * we need to calculate a duration from the generator.\n     *\n     * We set it to the generator itself to cache the duration.\n     * Any timeline resolver will need to have already precalculated\n     * the duration by this step.\n     */\n    if (generator.calculatedDuration === null && repeat) {\n        generator.calculatedDuration = calcGeneratorDuration(generator);\n    }\n    const { calculatedDuration } = generator;\n    let resolvedDuration = Infinity;\n    let totalDuration = Infinity;\n    if (calculatedDuration !== null) {\n        resolvedDuration = calculatedDuration + repeatDelay;\n        totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n    }\n    let currentTime = 0;\n    const tick = (timestamp) => {\n        if (startTime === null)\n            return;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (speed > 0)\n            startTime = Math.min(startTime, timestamp);\n        if (speed < 0)\n            startTime = Math.min(timestamp - totalDuration / speed, startTime);\n        if (holdTime !== null) {\n            currentTime = holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            currentTime = Math.round(timestamp - startTime) * speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = currentTime - delay * (speed >= 0 ? 1 : -1);\n        const isInDelayPhase = speed >= 0 ? timeWithoutDelay < 0 : timeWithoutDelay > totalDuration;\n        currentTime = Math.max(timeWithoutDelay, 0);\n        /**\n         * If this animation has finished, set the current time\n         * to the total duration.\n         */\n        if (playState === \"finished\" && holdTime === null) {\n            currentTime = totalDuration;\n        }\n        let elapsed = currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes$1[0] }\n            : frameGenerator.next(elapsed);\n        if (mapNumbersToKeyframes) {\n            state.value = mapNumbersToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done = speed >= 0 ? currentTime >= totalDuration : currentTime <= 0;\n        }\n        const isAnimationFinished = holdTime === null &&\n            (playState === \"finished\" || (playState === \"running\" && done));\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            finish();\n        }\n        return state;\n    };\n    const stopAnimationDriver = () => {\n        animationDriver && animationDriver.stop();\n        animationDriver = undefined;\n    };\n    const cancel = () => {\n        playState = \"idle\";\n        stopAnimationDriver();\n        resolveFinishedPromise();\n        updateFinishedPromise();\n        startTime = cancelTime = null;\n    };\n    const finish = () => {\n        playState = \"finished\";\n        onComplete && onComplete();\n        stopAnimationDriver();\n        resolveFinishedPromise();\n    };\n    const play = () => {\n        if (hasStopped)\n            return;\n        if (!animationDriver)\n            animationDriver = driver(tick);\n        const now = animationDriver.now();\n        onPlay && onPlay();\n        if (holdTime !== null) {\n            startTime = now - holdTime;\n        }\n        else if (!startTime || playState === \"finished\") {\n            startTime = now;\n        }\n        if (playState === \"finished\") {\n            updateFinishedPromise();\n        }\n        cancelTime = startTime;\n        holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        playState = \"running\";\n        animationDriver.start();\n    };\n    if (autoplay) {\n        play();\n    }\n    const controls = {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        get time() {\n            return millisecondsToSeconds(currentTime);\n        },\n        set time(newTime) {\n            newTime = secondsToMilliseconds(newTime);\n            currentTime = newTime;\n            if (holdTime !== null || !animationDriver || speed === 0) {\n                holdTime = newTime;\n            }\n            else {\n                startTime = animationDriver.now() - newTime / speed;\n            }\n        },\n        get duration() {\n            const duration = generator.calculatedDuration === null\n                ? calcGeneratorDuration(generator)\n                : generator.calculatedDuration;\n            return millisecondsToSeconds(duration);\n        },\n        get speed() {\n            return speed;\n        },\n        set speed(newSpeed) {\n            if (newSpeed === speed || !animationDriver)\n                return;\n            speed = newSpeed;\n            controls.time = millisecondsToSeconds(currentTime);\n        },\n        get state() {\n            return playState;\n        },\n        play,\n        pause: () => {\n            playState = \"paused\";\n            holdTime = currentTime;\n        },\n        stop: () => {\n            hasStopped = true;\n            if (playState === \"idle\")\n                return;\n            playState = \"idle\";\n            onStop && onStop();\n            cancel();\n        },\n        cancel: () => {\n            if (cancelTime !== null)\n                tick(cancelTime);\n            cancel();\n        },\n        complete: () => {\n            playState = \"finished\";\n        },\n        sample: (elapsed) => {\n            startTime = 0;\n            return tick(elapsed);\n        },\n    };\n    return controls;\n}\n\nexport { animateValue };\n","import { animateStyle } from './index.mjs';\nimport { isWaapiSupportedEasing } from './easing.mjs';\nimport { getFinalKeyframe } from './utils/get-final-keyframe.mjs';\nimport { animateValue } from '../js/index.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { memo } from '../../../utils/memo.mjs';\nimport { noop } from '../../../utils/noop.mjs';\nimport { frame, cancelFrame } from '../../../frameloop/frame.mjs';\n\nconst supportsWaapi = memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\nconst requiresPregeneratedKeyframes = (valueName, options) => options.type === \"spring\" ||\n    valueName === \"backgroundColor\" ||\n    !isWaapiSupportedEasing(options.ease);\nfunction createAcceleratedAnimation(value, valueName, { onUpdate, onComplete, ...options }) {\n    const canAccelerateAnimation = supportsWaapi() &&\n        acceleratedValues.has(valueName) &&\n        !options.repeatDelay &&\n        options.repeatType !== \"mirror\" &&\n        options.damping !== 0 &&\n        options.type !== \"inertia\";\n    if (!canAccelerateAnimation)\n        return false;\n    /**\n     * TODO: Unify with js/index\n     */\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Cancelling an animation will write to the DOM. For safety we want to defer\n     * this until the next `update` frame lifecycle. This flag tracks whether we\n     * have a pending cancel, if so we shouldn't allow animations to finish.\n     */\n    let pendingCancel = false;\n    /**\n     * Resolve the current Promise every time we enter the\n     * finished state. This is WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let { keyframes, duration = 300, ease, times } = options;\n    /**\n     * If this animation needs pre-generated keyframes then generate.\n     */\n    if (requiresPregeneratedKeyframes(valueName, options)) {\n        const sampleAnimation = animateValue({\n            ...options,\n            repeat: 0,\n            delay: 0,\n        });\n        let state = { done: false, value: keyframes[0] };\n        const pregeneratedKeyframes = [];\n        /**\n         * Bail after 20 seconds of pre-generated keyframes as it's likely\n         * we're heading for an infinite loop.\n         */\n        let t = 0;\n        while (!state.done && t < maxDuration) {\n            state = sampleAnimation.sample(t);\n            pregeneratedKeyframes.push(state.value);\n            t += sampleDelta;\n        }\n        times = undefined;\n        keyframes = pregeneratedKeyframes;\n        duration = t - sampleDelta;\n        ease = \"linear\";\n    }\n    const animation = animateStyle(value.owner.current, valueName, keyframes, {\n        ...options,\n        duration,\n        /**\n         * This function is currently not called if ease is provided\n         * as a function so the cast is safe.\n         *\n         * However it would be possible for a future refinement to port\n         * in easing pregeneration from Motion One for browsers that\n         * support the upcoming `linear()` easing function.\n         */\n        ease: ease,\n        times,\n    });\n    const cancelAnimation = () => {\n        pendingCancel = false;\n        animation.cancel();\n    };\n    const safeCancel = () => {\n        pendingCancel = true;\n        frame.update(cancelAnimation);\n        resolveFinishedPromise();\n        updateFinishedPromise();\n    };\n    /**\n     * Prefer the `onfinish` prop as it's more widely supported than\n     * the `finished` promise.\n     *\n     * Here, we synchronously set the provided MotionValue to the end\n     * keyframe. If we didn't, when the WAAPI animation is finished it would\n     * be removed from the element which would then revert to its old styles.\n     */\n    animation.onfinish = () => {\n        if (pendingCancel)\n            return;\n        value.set(getFinalKeyframe(keyframes, options));\n        onComplete && onComplete();\n        safeCancel();\n    };\n    /**\n     * Animation interrupt callback.\n     */\n    const controls = {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        attachTimeline(timeline) {\n            animation.timeline = timeline;\n            animation.onfinish = null;\n            return noop;\n        },\n        get time() {\n            return millisecondsToSeconds(animation.currentTime || 0);\n        },\n        set time(newTime) {\n            animation.currentTime = secondsToMilliseconds(newTime);\n        },\n        get speed() {\n            return animation.playbackRate;\n        },\n        set speed(newSpeed) {\n            animation.playbackRate = newSpeed;\n        },\n        get duration() {\n            return millisecondsToSeconds(duration);\n        },\n        play: () => {\n            if (hasStopped)\n                return;\n            animation.play();\n            /**\n             * Cancel any pending cancel tasks\n             */\n            cancelFrame(cancelAnimation);\n        },\n        pause: () => animation.pause(),\n        stop: () => {\n            hasStopped = true;\n            if (animation.playState === \"idle\")\n                return;\n            /**\n             * WAAPI doesn't natively have any interruption capabilities.\n             *\n             * Rather than read commited styles back out of the DOM, we can\n             * create a renderless JS animation and sample it twice to calculate\n             * its current value, \"previous\" value, and therefore allow\n             * Motion to calculate velocity for any subsequent animation.\n             */\n            const { currentTime } = animation;\n            if (currentTime) {\n                const sampleAnimation = animateValue({\n                    ...options,\n                    autoplay: false,\n                });\n                value.setWithVelocity(sampleAnimation.sample(currentTime - sampleDelta).value, sampleAnimation.sample(currentTime).value, sampleDelta);\n            }\n            safeCancel();\n        },\n        complete: () => {\n            if (pendingCancel)\n                return;\n            animation.finish();\n        },\n        cancel: safeCancel,\n    };\n    return controls;\n}\n\nexport { createAcceleratedAnimation };\n","function memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","function getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }) {\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : keyframes.length - 1;\n    return keyframes[index];\n}\n\nexport { getFinalKeyframe };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n}\n\nexport { isNone };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, isTransitionDefined };\n","import { warning } from '../../utils/errors.mjs';\nimport { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { createAcceleratedAnimation } from '../animators/waapi/create-accelerated-animation.mjs';\nimport { createInstantAnimation } from '../animators/instant.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isAnimatable } from '../utils/is-animatable.mjs';\nimport { getKeyframes } from '../utils/keyframes.mjs';\nimport { getValueTransition, isTransitionDefined } from '../utils/transitions.mjs';\nimport { animateValue } from '../animators/js/index.mjs';\nimport { MotionGlobalConfig } from '../../utils/GlobalConfig.mjs';\n\nconst animateMotionValue = (valueName, value, target, transition = {}) => {\n    return (onComplete) => {\n        const valueTransition = getValueTransition(transition, valueName) || {};\n        /**\n         * Most transition values are currently completely overwritten by value-specific\n         * transitions. In the future it'd be nicer to blend these transitions. But for now\n         * delay actually does inherit from the root transition if not value-specific.\n         */\n        const delay = valueTransition.delay || transition.delay || 0;\n        /**\n         * Elapsed isn't a public transition option but can be passed through from\n         * optimized appear effects in milliseconds.\n         */\n        let { elapsed = 0 } = transition;\n        elapsed = elapsed - secondsToMilliseconds(delay);\n        const keyframes = getKeyframes(value, valueName, target, valueTransition);\n        /**\n         * Check if we're able to animate between the start and end keyframes,\n         * and throw a warning if we're attempting to animate between one that's\n         * animatable and another that isn't.\n         */\n        const originKeyframe = keyframes[0];\n        const targetKeyframe = keyframes[keyframes.length - 1];\n        const isOriginAnimatable = isAnimatable(valueName, originKeyframe);\n        const isTargetAnimatable = isAnimatable(valueName, targetKeyframe);\n        warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n        let options = {\n            keyframes,\n            velocity: value.getVelocity(),\n            ease: \"easeOut\",\n            ...valueTransition,\n            delay: -elapsed,\n            onUpdate: (v) => {\n                value.set(v);\n                valueTransition.onUpdate && valueTransition.onUpdate(v);\n            },\n            onComplete: () => {\n                onComplete();\n                valueTransition.onComplete && valueTransition.onComplete();\n            },\n        };\n        /**\n         * If there's no transition defined for this value, we can generate\n         * unqiue transition settings for this value.\n         */\n        if (!isTransitionDefined(valueTransition)) {\n            options = {\n                ...options,\n                ...getDefaultTransition(valueName, options),\n            };\n        }\n        /**\n         * Both WAAPI and our internal animation functions use durations\n         * as defined by milliseconds, while our external API defines them\n         * as seconds.\n         */\n        if (options.duration) {\n            options.duration = secondsToMilliseconds(options.duration);\n        }\n        if (options.repeatDelay) {\n            options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n        }\n        if (!isOriginAnimatable ||\n            !isTargetAnimatable ||\n            instantAnimationState.current ||\n            valueTransition.type === false ||\n            MotionGlobalConfig.skipAnimations) {\n            /**\n             * If we can't animate this value, or the global instant animation flag is set,\n             * or this is simply defined as an instant transition, return an instant transition.\n             */\n            return createInstantAnimation(instantAnimationState.current\n                ? { ...options, delay: 0 }\n                : options);\n        }\n        /**\n         * Animate via WAAPI if possible.\n         */\n        if (\n        /**\n         * If this is a handoff animation, the optimised animation will be running via\n         * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n         * optimised animation.\n         */\n        !transition.isHandoff &&\n            value.owner &&\n            value.owner.current instanceof HTMLElement &&\n            /**\n             * If we're outputting values to onUpdate then we can't use WAAPI as there's\n             * no way to read the value from WAAPI every frame.\n             */\n            !value.owner.getProps().onUpdate) {\n            const acceleratedAnimation = createAcceleratedAnimation(value, valueName, options);\n            if (acceleratedAnimation)\n                return acceleratedAnimation;\n        }\n        /**\n         * If we didn't create an accelerated animation, create a JS animation\n         */\n        return animateValue(options);\n    };\n};\n\nexport { animateMotionValue };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { isNone } from './is-none.mjs';\n\nfunction getKeyframes(value, valueName, target, transition) {\n    const isTargetAnimatable = isAnimatable(valueName, target);\n    let keyframes;\n    if (Array.isArray(target)) {\n        keyframes = [...target];\n    }\n    else {\n        keyframes = [null, target];\n    }\n    const defaultOrigin = transition.from !== undefined ? transition.from : value.get();\n    let animatableTemplateValue = undefined;\n    const noneKeyframeIndexes = [];\n    for (let i = 0; i < keyframes.length; i++) {\n        /**\n         * Fill null/wildcard keyframes\n         */\n        if (keyframes[i] === null) {\n            keyframes[i] = i === 0 ? defaultOrigin : keyframes[i - 1];\n        }\n        if (isNone(keyframes[i])) {\n            noneKeyframeIndexes.push(i);\n        }\n        // TODO: Clean this conditional, it works for now\n        if (typeof keyframes[i] === \"string\" &&\n            keyframes[i] !== \"none\" &&\n            keyframes[i] !== \"0\") {\n            animatableTemplateValue = keyframes[i];\n        }\n    }\n    if (isTargetAnimatable &&\n        noneKeyframeIndexes.length &&\n        animatableTemplateValue) {\n        for (let i = 0; i < noneKeyframeIndexes.length; i++) {\n            const index = noneKeyframeIndexes[i];\n            keyframes[index] = getAnimatableNone(valueName, animatableTemplateValue);\n        }\n    }\n    return keyframes;\n}\n\nexport { getKeyframes };\n","import { animateValue } from './js/index.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nfunction createInstantAnimation({ keyframes, delay, onUpdate, onComplete, }) {\n    const setValue = () => {\n        onUpdate && onUpdate(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n        /**\n         * TODO: As this API grows it could make sense to always return\n         * animateValue. This will be a bigger project as animateValue\n         * is frame-locked whereas this function resolves instantly.\n         * This is a behavioural change and also has ramifications regarding\n         * assumptions within tests.\n         */\n        return {\n            time: 0,\n            speed: 1,\n            duration: 0,\n            play: (noop),\n            pause: (noop),\n            stop: (noop),\n            then: (resolve) => {\n                resolve();\n                return Promise.resolve();\n            },\n            cancel: (noop),\n            complete: (noop),\n        };\n    };\n    return delay\n        ? animateValue({\n            keyframes: [0, 1],\n            duration: 0,\n            delay,\n            onComplete: setValue,\n        })\n        : setValue();\n}\n\nexport { createInstantAnimation };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","import { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\n/**\n * Maximum time between the value of two frames, beyond which we\n * assume the velocity has since been 0.\n */\nconst MAX_VELOCITY_DELTA = 30;\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"11.0.6\";\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            const currentTime = time.now();\n            /**\n             * If we're updating the value during another frame or eventloop\n             * than the previous frame, then the we set the previous frame value\n             * to current.\n             */\n            if (this.updatedAt !== currentTime) {\n                this.setPrevFrameValue();\n            }\n            this.prev = this.current;\n            this.setCurrent(v);\n            // Update update subscribers\n            if (this.current !== this.prev && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        this.hasAnimated = false;\n        this.setCurrent(init);\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    setCurrent(current) {\n        this.current = current;\n        this.updatedAt = time.now();\n    }\n    setPrevFrameValue(prevFrameValue = this.current) {\n        this.prevFrameValue = prevFrameValue;\n        this.prevUpdatedAt = this.updatedAt;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = undefined;\n        this.prevFrameValue = prev;\n        this.prevUpdatedAt = this.updatedAt - delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.prevUpdatedAt = this.prevFrameValue = undefined;\n        this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        const currentTime = time.now();\n        if (!this.canTrackVelocity ||\n            this.prevFrameValue === undefined ||\n            currentTime - this.updatedAt > MAX_VELOCITY_DELTA) {\n            return 0;\n        }\n        const delta = Math.min(this.updatedAt - this.prevUpdatedAt, MAX_VELOCITY_DELTA);\n        // Casts because of parseFloat's poor typing\n        return velocityPerSecond(parseFloat(this.current) -\n            parseFloat(this.prevFrameValue), delta);\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        if (visualElement.variantChildren) {\n            visualElement.variantChildren.forEach((child) => {\n                setVariants(child, variantLabels);\n            });\n        }\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value, { owner: visualElement }));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        if (transitionOrigin !== undefined) {\n            origin[key] = transitionOrigin;\n        }\n        else {\n            const value = visualElement.getValue(key);\n            if (value) {\n                origin[key] = value.get();\n            }\n        }\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\nimport { optimizedAppearDataAttribute } from '../optimized-appear/data-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { getValueTransition } from '../utils/transitions.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction hasKeyframesChanged(value, target) {\n    const current = value.get();\n    if (Array.isArray(target)) {\n        for (let i = 0; i < target.length; i++) {\n            if (target[i] !== current)\n                return true;\n        }\n    }\n    else {\n        return current !== target;\n    }\n}\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            elapsed: 0,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        if (window.HandoffAppearAnimations) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                const elapsed = window.HandoffAppearAnimations(appearId, key, value, frame);\n                if (elapsed !== null) {\n                    valueTransition.elapsed = elapsed;\n                    valueTransition.isHandoff = true;\n                }\n            }\n        }\n        let canSkip = !valueTransition.isHandoff &&\n            !hasKeyframesChanged(value, valueTarget);\n        if (valueTransition.type === \"spring\" &&\n            (value.getVelocity() || valueTransition.velocity)) {\n            canSkip = false;\n        }\n        /**\n         * Temporarily disable skipping animations if there's an animation in\n         * progress. Better would be to track the current target of a value\n         * and compare that against valueTarget.\n         */\n        if (value.animation) {\n            canSkip = false;\n        }\n        if (canSkip)\n            continue;\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition));\n        const animation = value.animation;\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            transitionEnd && setTarget(visualElement, transitionEnd);\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             */\n            if (shouldAnimateType && (!isInherited || handledRemovedValues)) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\n\nexport { animateVisualElement };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete, custom } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent, { custom: custom !== null && custom !== void 0 ? custom : this.node.getProps().custom });\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        this.unmount();\n        if (isAnimationControls(animate)) {\n            this.unmount = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() { }\n}\n\nexport { AnimationFeature };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, contextWindow, dragSnapToOrigin = false } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        /**\n         * @internal\n         */\n        this.contextWindow = window;\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\n            if (this.dragSnapToOrigin)\n                resumeAnimation && resumeAnimation();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.dragSnapToOrigin = dragSnapToOrigin;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        this.contextWindow = contextWindow || window;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mixNumber } from '../../utils/mix/number.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mixNumber(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mixNumber(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mixNumber } from '../../../utils/mix/number.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(min, point, elastic.min)\n            : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(max, point, elastic.max)\n            : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const instance = node.instance;\n        if (instance &&\n            instance.style &&\n            instance.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mixNumber(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","// Fixes https://github.com/framer/motion/issues/2270\nconst getContextWindow = ({ current }) => {\n    return current ? current.ownerDocument.defaultView : null;\n};\n\nexport { getContextWindow };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, calcOrigin } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            const { dragSnapToOrigin } = this.getProps();\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.update(() => onDragStart(event, info), false, true);\n            }\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        const resumeAnimation = () => eachAxis((axis) => {\n            var _a;\n            return this.getAnimationState(axis) === \"paused\" &&\n                ((_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.play());\n        });\n        const { dragSnapToOrigin } = this.getProps();\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n            resumeAnimation,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            dragSnapToOrigin,\n            contextWindow: getContextWindow(this.visualElement),\n        });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.update(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        var _a;\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    pauseAnimation() {\n        eachAxis((axis) => { var _a; return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.pause(); });\n    }\n    getAnimationState(axis) {\n        var _a;\n        return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.state;\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial ? props.initial[axis] : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mixNumber(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mixNumber(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.update(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.node),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.update(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mixNumber(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","import React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\nimport { microtask } from '../../../frameloop/microtask.mjs';\nimport { frame } from '../../../frameloop/frame.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            microtask.postRender(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mixNumber(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mixNumber(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mixNumber(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mixNumber(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mixNumber(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction boxEqualsRounded(a, b) {\n    return (Math.round(a.x.min) === Math.round(b.x.min) &&\n        Math.round(a.x.max) === Math.round(b.x.max) &&\n        Math.round(a.y.min) === Math.round(b.y.min) &&\n        Math.round(a.y.max) === Math.round(b.y.max));\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEqualsRounded, isDeltaZero, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { record } from '../../debug/record.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/interfaces/single-value.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { cancelFrame, frameData, steps, frame } from '../../frameloop/frame.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { time } from '../../frameloop/sync-time.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\nconst hiddenVisibility = { visibility: \"hidden\" };\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\n/**\n * Use a mutable data object for debug data so as to not create a new\n * object every frame.\n */\nconst projectionFrameData = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                projectionFrameData.totalNodes =\n                    projectionFrameData.resolvedTargetDeltas =\n                        projectionFrameData.recalculatedProjection =\n                            0;\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                record(projectionFrameData);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = time.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            steps.update.process(frameData);\n            steps.preRender.process(frameData);\n            steps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                microtask.read(() => this.update());\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            if (!this.targetDelta && !this.relativeTarget) {\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            projectionFrameData.resolvedTargetDeltas++;\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n                lead.targetWithTransforms = createBox();\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.projectionTransform) {\n                    this.projectionDelta = createDelta();\n                    this.projectionTransform = \"none\";\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            projectionFrameData.recalculatedProjection++;\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.scheduleRender && this.options.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp) {\n            var _a, _b;\n            if (!this.instance || this.isSVG)\n                return undefined;\n            if (!this.isVisible) {\n                return hiddenVisibility;\n            }\n            const styles = {\n                visibility: \"\",\n            };\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    projectionFrameData.totalNodes++;\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mixNumber(delta.translate, 0, p);\n    output.scale = mixNumber(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mixNumber(from.min, to.min, p);\n    output.max = mixNumber(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function record(data) {\n    if (window.MotionDebug) {\n        window.MotionDebug.record(data);\n    }\n}\n\nexport { record };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { time } from '../frameloop/sync-time.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = time.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\n\nexport { delay };\n","import { animateMotionValue } from './motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isNumericalString } from '../../../utils/is-numerical-string.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    else if (isCSSVariableToken(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariableToken(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariableToken(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        if (!transitionEnd)\n            transitionEnd = {};\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { parseCSSVariable, resolveCSSVariables };\n","import { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from '../../../utils/errors.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n    \"translateX\",\n    \"translateY\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        value && value.jump(origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                /**\n                 * Don't allow wildcard keyframes to be used to detect\n                 * a difference in value types.\n                 */\n                if (to[i] === null)\n                    break;\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                value.jump(to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { positionalValues, unitConversion };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { warning, invariant } from '../utils/errors.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, presenceContext, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => frame.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {});\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps) {\n        return {};\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            this.features[key].unmount();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                frame.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, initialLayoutGroupConfig) {\n        let ProjectionNodeConstructor;\n        let MeasureLayout;\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n            renderedProps.ignoreStrict\n                ? warning(false, strictMessage)\n                : invariant(false, strictMessage);\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Feature: FeatureConstructor, ProjectionNode, MeasureLayout: MeasureLayoutComponent, } = featureDefinitions[name];\n            if (ProjectionNode)\n                ProjectionNodeConstructor = ProjectionNode;\n            if (isEnabled(renderedProps)) {\n                if (!this.features[name] && FeatureConstructor) {\n                    this.features[name] = new FeatureConstructor(this);\n                }\n                if (MeasureLayoutComponent) {\n                    MeasureLayout = MeasureLayoutComponent;\n                }\n            }\n        }\n        if ((this.type === \"html\" || this.type === \"svg\") &&\n            !this.projection &&\n            ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return MeasureLayout;\n    }\n    updateFeatures() {\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature.isMounted) {\n                feature.update();\n            }\n            else {\n                feature.mount();\n                feature.isMounted = true;\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (value !== this.values.get(key)) {\n            this.removeValue(key);\n            this.bindToMotionValue(key, value);\n        }\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        var _a;\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"11.0.6\", `Attempting to mix Framer Motion versions ${nextValue.version} with 11.0.6 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style ? props.style[key] : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, isMounted) {\n        const origin = getOrigin(target, transition || {}, this);\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\n\nconst preloadedFeatures = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, preloadedFeatures, createDomVisualElement));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, preloadedFeatures, createDomVisualElement));\n}\n\nexport { createDomMotionComponent, motion };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n","const MotionGlobalConfig = {\n    skipAnimations: false,\n    useManualTiming: false,\n};\n\nexport { MotionGlobalConfig };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","const isBrowser = typeof document !== \"undefined\";\n\nexport { isBrowser };\n","const noop = (any) => any;\n\nexport { noop };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","const wrap = (min, max, v) => {\n    const rangeSize = max - min;\n    return ((((v - min) % rangeSize) + rangeSize) % rangeSize) + min;\n};\n\nexport { wrap };\n","import { useRef, useState, useCallback } from 'react';\nimport { wrap } from './wrap.mjs';\n\n/**\n * Cycles through a series of visual properties. Can be used to toggle between or cycle through animations. It works similar to `useState` in React. It is provided an initial array of possible states, and returns an array of two arguments.\n *\n * An index value can be passed to the returned `cycle` function to cycle to a specific index.\n *\n * ```jsx\n * import * as React from \"react\"\n * import { motion, useCycle } from \"framer-motion\"\n *\n * export const MyComponent = () => {\n *   const [x, cycleX] = useCycle(0, 50, 100)\n *\n *   return (\n *     <motion.div\n *       animate={{ x: x }}\n *       onTap={() => cycleX()}\n *      />\n *    )\n * }\n * ```\n *\n * @param items - items to cycle through\n * @returns [currentState, cycleState]\n *\n * @public\n */\nfunction useCycle(...items) {\n    const index = useRef(0);\n    const [item, setItem] = useState(items[index.current]);\n    const runCycle = useCallback((next) => {\n        index.current =\n            typeof next !== \"number\"\n                ? wrap(0, items.length, index.current + 1)\n                : next;\n        setItem(items[index.current]);\n    }, \n    // The array will change on each call, but by putting items.length at\n    // the front of this array, we guarantee the dependency comparison will match up\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [items.length, ...items]);\n    return [item, runCycle];\n}\n\nexport { useCycle };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n"],"names":["module","exports","condition","format","a","b","c","d","e","f","error","undefined","Error","args","argIndex","replace","name","framesToPop","CardBody","React","_ref","ref","className","bsPrefix","as","Component","props","useBootstrapPrefix","_jsx","classNames","displayName","CardFooter","context","CardHeader","prefix","contextValue","useMemo","cardHeaderBsPrefix","CardHeaderContext","Provider","value","children","CardImg","variant","concat","CardImgOverlay","CardLink","p","DivStyledAsH6","divWithClassName","CardSubtitle","CardText","DivStyledAsH5","CardTitle","Card","bg","text","border","body","Object","assign","Img","Title","Subtitle","Body","Link","Text","Header","Footer","ImgOverlay","useRef","useEffect","current","useEventCallback","fn","useCommittedRef","useCallback","arguments","deps","isFirst","useWillUnmount","onUnmount","valueRef","useUpdatedRef","MAX_DELAY_MS","setChainedTimeout","handleRef","timeoutAtMs","delayMs","Date","now","setTimeout","useTimeout","isMounted","mounted","useMounted","clearTimeout","clear","set","length","global","navigator","product","WeakMap","_excluded","useButtonProps","_ref2","tagName","disabled","href","target","rel","role","onClick","tabIndex","type","meta","handleClick","event","trim","isTrivialHref","preventDefault","stopPropagation","onKeyDown","key","Button","asProp","source","excluded","i","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","buttonProps","Anchor","handleKeyDown","bind","prototype","hasOwnProperty","call","apply","this","defaultKey","charAt","toUpperCase","substr","_toPropertyKey","arg","input","hint","prim","Symbol","toPrimitive","res","TypeError","String","Number","_toPrimitive","useUncontrolled","config","reduce","result","fieldName","_extends2","defaultValue","Utils","propsValue","rest","map","handlerName","_useUncontrolledProp","propValue","handler","wasPropRef","_useState","useState","stateValue","setState","isProp","wasProp","_len","Array","_key","useUncontrolledProp","_extends","componentWillMount","state","constructor","getDerivedStateFromProps","componentWillReceiveProps","nextProps","prevState","componentWillUpdate","nextState","prevProps","__reactInternalSnapshotFlag","__reactInternalSnapshot","getSnapshotBeforeUpdate","__suppressDeprecationWarning","CarouselCaption","CarouselItem","finalClassName","func","index","child","ownerWindow","node","doc","ownerDocument","document","defaultView","window","rUpper","msPattern","hyphenateStyleName","string","toLowerCase","hyphenate","supportedTransforms","property","css","transforms","style","getPropertyValue","psuedoElement","getComputedStyle","forEach","test","isTransform","removeProperty","cssText","createElement","optionsSupported","onceSupported","options","passive","once","canUseDOM","addEventListener","removeEventListener","eventName","capture","wrappedHandler","__once","onceHandler","emulateTransitionEnd","element","duration","padding","called","handle","bubbles","cancelable","createEvent","initEvent","dispatchEvent","triggerEvent","remove","listen","transitionEnd","str","mult","parseFloat","parseDuration","removeEmulate","transitionEndListener","delay","_setPrototypeOf","o","setPrototypeOf","__proto__","UNMOUNTED","EXITED","ENTERING","ENTERED","EXITING","Transition","_React$Component","subClass","superClass","_this","initialStatus","appear","isMounting","enter","appearStatus","in","unmountOnExit","mountOnEnter","status","nextCallback","create","_proto","componentDidMount","updateStatus","componentDidUpdate","nextStatus","componentWillUnmount","cancelNextCallback","getTimeouts","exit","timeout","mounting","nodeRef","ReactDOM","scrollTop","forceReflow","performEnter","performExit","_this2","appearing","maybeNode","maybeAppearing","timeouts","enterTimeout","safeSetState","onEntered","onEnter","onEntering","onTransitionEnd","_this3","onExit","onExiting","onExited","cancel","callback","setNextCallback","_this4","active","doesNotHaveTimeoutOrListener","addEndListener","_ref3","maybeNextCallback","render","_this$props","childProps","TransitionGroupContext","only","noop","contextType","propTypes","defaultProps","toFnRef","refA","refB","mergeRefs","childRef","mergedRef","useMergedRefs","attachRef","r","componentOrElement","normalize","param","handleEnter","handleEntering","handleEntered","handleExit","handleExiting","handleExited","handleAddEndListener","innerProps","Carousel","defaultActiveIndex","uncontrolledProps","slide","fade","controls","indicators","indicatorLabels","activeIndex","onSelect","onSlide","onSlid","interval","keyboard","pause","onMouseOver","onMouseOut","wrap","touch","onTouchStart","onTouchMove","onTouchEnd","prevIcon","prevLabel","nextIcon","nextLabel","isRTL","useIsRTL","nextDirectionRef","direction","setDirection","paused","setPaused","isSliding","setIsSliding","renderedActiveIndex","setRenderedActiveIndex","activeChildInterval","numChildren","activeChildIntervalRef","prev","nextActiveIndex","next","elementRef","useImperativeHandle","nextWhenVisible","hidden","parentNode","elementStyle","display","visibility","isVisible","slideDirection","useUpdateEffect","orderClassName","directionalClassName","offsetHeight","triggerBrowserReflow","handleMouseOver","handleMouseOut","touchStartXRef","touchDeltaXRef","touchUnpauseTimeout","handleTouchStart","touches","clientX","handleTouchMove","handleTouchEnd","touchDeltaX","Math","abs","shouldPlay","intervalHandleRef","_activeChildIntervalR","nextFunc","setInterval","visibilityState","clearInterval","indicatorOnClicks","from","_","_jsxs","isActive","TransitionWrapper","_Fragment","Caption","Item","DEFAULT_BREAKPOINTS","DEFAULT_MIN_BREAKPOINT","ThemeContext","prefixes","breakpoints","minBreakpoint","Consumer","defaultPrefix","useContext","dir","hasOwn","classes","appendClass","parseValue","isArray","toString","includes","newClass","default","useIsMounted","useIsomorphicLayoutEffect","PopChildMeasure","isPresent","size","sizeRef","height","width","offsetWidth","top","offsetTop","left","offsetLeft","PopChild","id","useId","useInsertionEffect","dataset","motionPopId","head","appendChild","sheet","insertRule","removeChild","PresenceChild","initial","onExitComplete","custom","presenceAffectsLayout","mode","presenceChildren","useConstant","newChildrenMap","childId","isComplete","values","register","delete","PresenceContext","Map","getChildKey","AnimatePresence","exitBeforeEnter","invariant","forceRender","LayoutGroupContext","forcedRenderCount","setForcedRenderCount","frame","postRender","useForceUpdate","filteredChildren","filtered","Children","isValidElement","push","onlyElements","childrenToRender","exitingChildren","presentChildren","allChildren","isInitialRender","updateChildLookup","presentKeys","targetKeys","numPresent","has","component","get","insertionIndex","exitingComponent","leftOverKeys","filter","childKey","leftOverKey","presentChild","presentChildKey","splice","cloneElement","createContext","Queue","order","scheduled","Set","add","process","stepsOrder","maxElapsed","createRenderBatcher","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","delta","timestamp","isProcessing","steps","acc","thisFrame","nextFrame","numToRun","flushNextFrame","toKeepAlive","WeakSet","step","schedule","addToCurrentFrame","queue","frameData","createRenderStep","processStep","stepId","processBatch","MotionGlobalConfig","useManualTiming","performance","max","min","keepAlive","immediate","cancelFrame","requestAnimationFrame","MotionConfigContext","transformPagePoint","isStatic","reducedMotion","MotionContext","LazyContext","strict","camelToDash","optimizedAppearDataAttribute","microtask","cancelMicrotask","queueMicrotask","isRefObject","isVariantLabel","v","isAnimationControls","start","variantPriorityOrder","variantProps","isControllingVariants","animate","some","isVariantNode","Boolean","variants","useCreateMotionContext","inherit","getCurrentTreeVariants","variantLabelsAsDependency","prop","join","featureProps","animation","drag","focus","hover","tap","pan","inView","layout","featureDefinitions","isEnabled","SwitchLayoutGroupContext","motionComponentSymbol","for","createMotionComponent","preloadedFeatures","createVisualElement","useRender","useVisualState","features","loadFeatures","ForwardRefComponent","forwardRef","externalRef","MeasureLayout","configAndProps","layoutId","useLayoutId","visualState","isBrowser","visualElement","parent","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","renderer","blockInitialAnimation","update","wantsHandoff","HandoffComplete","animationState","animateChanges","updateFeatures","useVisualElement","initialLayoutGroupConfig","isStrict","instance","mount","unmount","useMotionRef","layoutGroupId","createMotionProxy","createConfig","Proxy","componentCache","_target","lowercaseSVGElements","isSVGComponent","scaleCorrectors","transformPropOrder","transformProps","isForcedMotionValue","startsWith","isMotionValue","getVelocity","translateAlias","x","y","z","transformPerspective","numTransforms","checkStringStartsWith","token","isCSSVariableName","startsAsVariableToken","isCSSVariableToken","singleCssVariableRegex","getValueAsType","transform","clamp","number","parse","alpha","scale","sanitize","round","floatRegex","colorRegex","singleColorRegex","isString","createUnitType","unit","endsWith","split","degrees","percent","px","vh","vw","progressPercentage","int","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","maxWidth","maxHeight","right","bottom","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","opacity","originX","originY","originZ","zIndex","fillOpacity","strokeOpacity","numOctaves","buildHTMLStyles","latestValues","transformTemplate","vars","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","transformIsDefault","enableHardwareAcceleration","allowTransformNone","transformString","transformName","buildTransform","createHtmlRenderState","copyRawValuesOnly","useStyle","useInitialMotionValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","onTap","onTapStart","whileTap","validMotionProps","isValidMotionProp","shouldForward","isValidProp","require","_a","calcOrigin","origin","offset","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","latest","viewBox","attrs","dimensions","pxOriginX","pxOriginY","calcSVGTransformOrigin","spacing","useDashCase","buildSVGPath","createSvgRenderState","tag","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","filterProps","elementProps","Fragment","renderedChildren","renderHTML","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","newValues","scrapeMotionValuesFromProps$1","substring","resolveVariantFromProps","definition","currentValues","currentVelocity","isKeyframesTarget","isCustomValue","mix","toValue","resolveFinalValueInKeyframes","resolveMotionValue","unwrappedValue","makeUseVisualState","make","createRenderState","onMount","makeLatestValues","makeState","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","resolved","transition","valueTarget","svgMotionConfig","read","getBBox","getBoundingClientRect","htmlMotionConfig","addDomEvent","isPrimaryPointer","pointerType","button","isPrimary","extractEventInfo","pointType","point","addPointerInfo","addPointerEvent","combineFunctions","pipe","transformers","createLock","lock","openLock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","Feature","addHoverEvent","callbackName","handleEvent","info","getProps","whileHover","setActive","isNodeOrChild","parentElement","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","observerCallbacks","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","all","gestureAnimations","super","hasEnteredView","isInView","startObserver","viewport","rootMargin","amount","threshold","isIntersecting","onViewportEnter","onViewportLeave","hasOptionsChanged","prevViewport","hasViewportOptionChanged","removeStartListeners","removeEndListeners","removeAccessibleListeners","startPointerPress","startEvent","startInfo","isPressing","removePointerUpListener","endPointerPress","endEvent","endInfo","checkPressEnd","onTapCancel","globalTapTarget","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","handleBlur","removePointerListener","removeFocusListener","onFocus","isFocusVisible","matches","onBlur","shallowCompare","prevLength","resolveVariant","getCurrent","velocity","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","instantAnimationState","isBezierDefinition","easing","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","linear","ease","easeIn","easeOut","easeInOut","circIn","circOut","backIn","backOut","mapEasingToNativeEasing","calcBezier","t","a1","a2","subdivisionPrecision","subdivisionMaxIterations","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","binarySubdivide","isEasingArray","mirrorEasing","reverseEasing","sin","acos","circInOut","backInOut","easingLookup","anticipate","pow","easingDefinitionToFunction","x1","y1","x2","y2","progress","to","toFromDifference","mixNumber","hueToRgb","q","isColorString","testProp","splitColor","aName","bName","cName","match","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","g","parseInt","hsla","hue","saturation","lightness","mixLinearColor","fromExpo","expo","sqrt","colorTypes","asRGBA","color","find","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","NUMBER_TOKEN","COLOR_TOKEN","VAR_TOKEN","VAR_FUNCTION_TOKEN","SPLIT_TOKEN","complexRegex","analyseComplexValue","originalValue","matchedValues","indexes","var","types","parsedValue","parseComplexValue","createTransformer","numSections","output","convertNumbersToZero","complex","_b","isNaN","getAnimatableNone","parsed","transformer","mixImmediate","mixNumber$1","getMixer","mixComplex","mixArray","mixObject","numValues","blendValue","template","originStats","targetStats","orderedOrigin","pointers","originIndex","originValue","matchOrder","warning","mixer","interpolate","isClamp","inputLength","reverse","mixers","customMixer","mixerFactory","numMixers","easingFunction","createMixers","interpolator","progressInRange","defaultOffset","arr","remaining","offsetProgress","fillOffset","keyframes","keyframeValues","times","easingFunctions","done","absoluteTimes","convertOffsetToTimes","mapTimeToKeyframe","calculatedDuration","velocityPerSecond","frameDuration","velocitySampleDuration","calcGeneratorVelocity","resolveValue","prevT","safeMin","minDuration","maxDuration","minDamping","maxDamping","findSpring","envelope","derivative","bounce","mass","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","initialGuess","rootIterations","approximateRoot","stiffness","damping","durationKeys","physicsKeys","isSpringType","spring","restDelta","restSpeed","isResolvedFromDuration","springOptions","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","resolveSpring","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","clearTime","time","newTime","frameloopDriver","passTimestamp","stop","maxGeneratorDuration","calcGeneratorDuration","generator","Infinity","decay","tween","percentToProgress","animateValue","resolveFinishedPromise","currentFinishedPromise","autoplay","driver","keyframes$1","repeat","repeatDelay","repeatType","onPlay","onStop","onComplete","onUpdate","speed","hasStopped","updateFinishedPromise","Promise","resolve","animationDriver","generatorFactory","mapNumbersToKeyframes","mirroredGenerator","playState","holdTime","startTime","cancelTime","resolvedDuration","totalDuration","currentTime","tick","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","isAnimationFinished","finish","stopAnimationDriver","play","then","reject","newSpeed","complete","sample","supportsWaapi","memo","Element","acceleratedValues","createAcceleratedAnimation","valueName","pendingCancel","requiresPregeneratedKeyframes","sampleAnimation","pregeneratedKeyframes","keyframeOptions","fill","iterations","animateStyle","owner","cancelAnimation","safeCancel","onfinish","getFinalKeyframe","attachTimeline","timeline","playbackRate","setWithVelocity","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","isAnimatable","maxDefaults","applyDefaultFilter","slice","functionRegex","functions","defaultValueTypes","backgroundColor","outlineColor","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","isZeroValueString","isNone","getValueTransition","animateMotionValue","valueTransition","isTargetAnimatable","defaultOrigin","animatableTemplateValue","noneKeyframeIndexes","getKeyframes","originKeyframe","targetKeyframe","isOriginAnimatable","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","skipAnimations","setValue","createInstantAnimation","isHandoff","HTMLElement","acceleratedAnimation","isWillChangeMotionValue","isNumericalString","addUniqueItem","item","removeItem","SubscriptionManager","subscriptions","notify","numSubscriptions","getSize","collectMotionValues","MotionValue","init","version","canTrackVelocity","events","updateAndNotify","updatedAt","setPrevFrameValue","setCurrent","change","renderRequest","hasAnimated","prevFrameValue","prevUpdatedAt","onChange","subscription","on","unsubscribe","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","jump","getPrevious","startAnimation","animationStart","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","motionValue","testValueType","dimensionValueTypes","findDimensionValueType","valueTypes","setMotionValue","hasValue","getValue","addValue","setTarget","makeTargetAnimatable","getOriginFromTransition","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","hasKeyframesChanged","animateTarget","transitionOverride","willChange","animations","animationTypeState","getState","HandoffAppearAnimations","appearId","canSkip","shouldReduceMotion","animateVariant","getAnimation","getChildAnimations","variantChildren","forwardDelay","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","animateChildren","first","last","sortNodePosition","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createTypeState","whileInView","whileDrag","whileFocus","buildResolvedTypeValues","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","shouldAnimateType","checkVariantsDidChange","handledRemovedValues","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","valueHasChanged","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","updateAnimationControlsSubscription","subscribe","prevAnimate","prevIsPresent","prevPresenceContext","exitAnimation","PanSession","handlers","contextWindow","dragSnapToOrigin","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onEnd","onSessionEnd","resumeAnimation","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","createDelta","createBox","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","isInteger","translateAxis","transformAxis","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","measureViewportBox","topLeft","bottomRight","transformBoxPoints","getContextWindow","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","pauseAnimation","stopAnimation","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getAnimationState","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","measure","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","addListeners","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","asyncHandler","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","MeasureLayoutWithContext","React__default","layoutGroup","switchLayoutGroup","correctors","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","currentAnimation","isLead","promoteContext","scheduleCheckAfterUnmount","deregister","usePresence","applyTo","boxShadow","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEqualsRounded","aspectRatio","NodeStack","scheduleRender","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","depth","FlatTree","isDirty","transformAxes","hiddenVisibility","projectionFrameData","totalNodes","resolvedTargetDeltas","recalculatedProjection","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","projectionUpdateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","data","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","MotionDebug","record","hasProjected","animationProgress","sharedNodes","path","notifyListeners","subscriptionManager","hasListeners","SVGElement","cancelDelay","resizeUnblockUpdate","checkElapsed","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetRotation","getTransformTemplate","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","preRender","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","needsMeasurement","layoutScroll","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","boxWithoutScroll","rootScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","resolvedRelativeTargetAt","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isProjecting","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","applyTreeDeltas","projectionTransform","projectionDeltaWithTransform","prevProjectionTransform","notifyAll","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","animationType","xLength","yLength","initialPromotionConfig","shouldPreserveFollowOpacity","getPrevLead","hasRotate","resetValues","setStaticValue","styles","pointerEvents","emptyStyles","valuesToRender","corrected","num","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","userAgentContains","userAgent","roundPoint","DocumentProjectionNode","documentElement","scrollLeft","HTMLProjectionNode","documentNode","position","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","dragControls","ProjectionNode","splitCSSVariableRegex","maxDepth","getVariableValue","fallback","exec","parseCSSVariable","trimmed","positionalKeys","isPositionalKey","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","positionalValues","_ref4","_ref5","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","checkAndConvertChangedValueTypes","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","fromType","toType","numKeyframes","fromIndex","removedTransforms","removeNonTranslationalTransform","scrollY","pageYOffset","convertedTarget","convertChangedValueTypes","changedKeys","originBbox","elementComputedStyle","targetBbox","_ref12","scrollTo","unitConversion","hasPositionalKey","parseDomVariant","resolveCSSVariables","prefersReducedMotion","hasReducedMotionListener","visualElementStore","featureNames","numFeatures","propEventHandlers","numVariantProps","VisualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","baseTarget","initialValues","initialMotionValues","_props","_prevProps","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","valueIsTransform","removeOnChange","latestValue","removeOnRenderRequest","other","sortInstanceNodePosition","ProjectionNodeConstructor","renderedProps","FeatureConstructor","MeasureLayoutComponent","feature","build","measureInstanceViewportBox","getStaticValue","canMutate","makeTargetAnimatableFromInstance","listener","nextValue","prevValue","existingValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","getClosestVariantNode","closestVariantNode","removeValueFromRenderState","readValue","getBaseTargetFromProps","readValueFromInstance","setBaseTarget","valueFromInitial","DOMVisualElement","compareDocumentPosition","transitionOrigin","getOrigin","newValueKeys","numNewValues","targetValue","checkTargetForNewValues","HTMLVisualElement","defaultType","computedStyle","childSubscription","textContent","SVGVisualElement","getAttribute","createDomVisualElement","motion","createDomMotionConfig","any","rangeSize","useCycle","items","setItem","useLayoutEffect"],"sourceRoot":""}